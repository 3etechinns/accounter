<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD//EN" "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<hibernate-mapping default-access="field"
	package="com.vimukti.accounter.core">

	<query name="get.canVoidOrEditTransaction.from.transactionID">
		<query-param name="company" type="Company" />
		<query-param name="id" type="long" />
		select t.canVoidOrEdit from
		com.vimukti.accounter.core.Transaction t
		where t.id=:id and t.company=:company
	</query>

	<query name="getdistnct.from.traction.by.date">
		<query-param name="company" type="Company" />
		<query-param name="status" type="int" />
		select distinct(t.transactionDate) from
		com.vimukti.accounter.core.Transaction t where t.company=:company and
		t.transactionDate &gt;=
		(select
		c.preferences.depreciationStartDate
		from
		com.vimukti.accounter.core.Company c where c.id is not
		null) and
		t.transactionDate &lt;= (select max(d.depreciateTo) from
		com.vimukti.accounter.core.Depreciation d where d.status=:status)
		order by
		t.transactionDate
	</query>

	<query name="getFixedAsset.from.id">
		<query-param name="company" type="Company" />
		<query-param name="id" type="long" />
		select f from
		com.vimukti.accounter.core.FixedAsset f
		where f.id=:id and
		f.company=:company
	</query>

	<query name="getEntry.from.journalEntryType">
		<query-param name="company" type="Company" />
		select je from
		com.vimukti.accounter.core.Entry e
		inner join
		e.journalEntry je where je.company=:company and
		e.journalEntryType=3
		order by je.id
	</query>

	<query name="getFiscalYear.by.check.isCurrentFiscalYearistrue">
		<query-param name="company" type="Company" />
		select f.startDate from
		com.vimukti.accounter.core.FiscalYear f where
		f.company=:company and
		f.isCurrentFiscalYear=true
	</query>

	<query name="getEntry.by.debitand.balanceDue.orderbyid">
		<query-param name="company" type="Company" />
		select je from
		com.vimukti.accounter.core.Entry e
		inner join
		e.journalEntry je where je.company=:company and
		e.debit!=0.0 and
		je.balanceDue>0.0
		order
		by
		je.id
	</query>

	<query name="getEntry.by.vendorId.creditand.balanceDue.orderbyid">
		<query-param name="company" type="Company" />
		<query-param name="id" type="long" />
		select je from
		com.vimukti.accounter.core.Entry e
		inner join
		e.journalEntry je where je.company=:company and
		e.vendor.id=:id and
		e.credit!=0.0 and
		je.balanceDue>0.0 order by
		je.id
	</query>

	<query name="getEntry.by.customerId.debitand.balanceDue.orderbyid">
		<query-param name="company" type="Company" />
		<query-param name="id" type="long" />
		select je from
		com.vimukti.accounter.core.Entry e
		inner join
		e.journalEntry je where je.company=:company and
		e.customer.id=:id and
		e.debit !=0.0 and
		je.balanceDue>0.0
		order
		by je.id
	</query>


	<query name="getVATReturn.checkingby.taxagencyidand.dates">
		<query-param name="company" type="Company" />
		<query-param name="id" type="long" />
		select min(v.VATperiodStartDate),
		max(v.VATperiodEndDate) from
		com.vimukti.accounter.core.VATReturn v
		where v.company=:company and
		v.taxAgency.id
		=:id group by v.taxAgency.id
	</query>

	<query name="get.name.fromAccount.byId">
		<query-param name="id" type="long" />
		<query-param name="company" type="Company" />
		select a.name from
		com.vimukti.accounter.core.Account
		a where a.id=:id
		and a.company=:company
	</query>

	<query name="getDepreciation.from.depreciateFrom.byFixedassetId">
		<query-param name="id" type="long" />
		<query-param name="date" type="long" />
		<query-param name="status" type="int" />
		select d from com.vimukti.accounter.core.Depreciation
		d inner join
		d.fixedAsset where d.depreciateFrom >=:date and
		d.status=:status and
		d.fixedAsset.id=:id
	</query>

	<query name="update.merge.Payee.mergeoldbalance.tonewbalance">
		<query-param name="id" type="long" />
		<query-param name="balance" type="double" />
		<query-param name="company" type="Company" />
		update com.vimukti.accounter.core.Payee set balance=:balance where
		id=:id and company=:company
	</query>

	<query name="update.merge.invoice.old.tonew">
		<query-param name="fromID" type="long" />
		<query-param name="toID" type="long" />
		<query-param name="company" type="Company" />
		update com.vimukti.accounter.core.Invoice set customer.id=:toID where
		customer.id=:fromID and company=:company
	</query>
	<query name="update.merge.cashsale.old.tonew">
		<query-param name="fromID" type="long" />
		<query-param name="toID" type="long" />
		<query-param name="company" type="Company" />
		update com.vimukti.accounter.core.CashSales set customer.id=:toID
		where customer.id=:fromID and company=:company
	</query>

	<query name="update.merge.salesOrder.old.tonew">
		<query-param name="fromID" type="long" />
		<query-param name="toID" type="long" />
		<query-param name="company" type="Company" />
		update com.vimukti.accounter.core.SalesOrder set customer.id=:toID
		where customer.id=:fromID and company=:company
	</query>

	<query name="update.merge.customercreditmemo.old.tonew">
		<query-param name="fromID" type="long" />
		<query-param name="toID" type="long" />
		<query-param name="company" type="Company" />
		update com.vimukti.accounter.core.CustomerCreditMemo set
		customer.id=:toID where customer.id=:fromID and company=:company
	</query>

	<query name="update.merge.Entry.old.tonew">
		<query-param name="fromID" type="long" />
		<query-param name="toID" type="long" />
		<query-param name="memo" type="String" />
		<query-param name="company" type="Company" />
		update com.vimukti.accounter.core.Entry set memo=:memo,
		customer.id=:toID where customer.company=:company and
		customer.id=:fromID
	</query>

	<query name="update.merge.CustomerPrePayment.old.tonew">
		<query-param name="fromID" type="long" />
		<query-param name="toID" type="long" />
		<query-param name="company" type="Company" />
		update com.vimukti.accounter.core.CustomerPrePayment set
		customer.id=:toID where customer.id=:fromID and company=:company
	</query>

	<query name="update.merge.CustomerRefund.old.tonew">
		<query-param name="fromID" type="long" />
		<query-param name="toID" type="long" />
		<query-param name="company" type="Company" />
		update com.vimukti.accounter.core.CustomerRefund set payTo.id=:toID
		where payTo.id=:fromID and company=:company
	</query>
	<query name="update.merge.Estimate.old.tonew">
		<query-param name="fromID" type="long" />
		<query-param name="toID" type="long" />
		<query-param name="company" type="Company" />
		update com.vimukti.accounter.core.Estimate set customer.id=:toID
		where
		customer.id=:fromID and company=:company
	</query>
	<query name="update.merge.ReceivePayment.old.tonew">
		<query-param name="fromID" type="long" />
		<query-param name="toID" type="long" />
		<query-param name="company" type="Company" />
		update com.vimukti.accounter.core.ReceivePayment set customer.id=:toID
		where
		customer.id=:fromID and company=:company
	</query>
	<query name="update.merge.transactionMakeDeposit.old.tonew">
		<query-param name="fromID" type="long" />
		<query-param name="toID" type="long" />
		<query-param name="company" type="Company" />
		update com.vimukti.accounter.core.TransactionMakeDeposit set
		customer.id=:toID where
		customer.id=:fromID and company=:company
	</query>
	<query name="update.merge.writeCheck.old.tonew">
		<query-param name="fromID" type="long" />
		<query-param name="toID" type="long" />
		<query-param name="company" type="Company" />
		update com.vimukti.accounter.core.WriteCheck set
		customer.id=:toID
		where customer.id=:fromID and company=:company
	</query>

	<query name="delete.entry.old">
		<query-param name="from" type="long" />
		<query-param name="company" type="Company" />
		delete from com.vimukti.accounter.core.Entry where customer.id=:from
		and customer.company=:company
	</query>


	<query name="update.mergeVendor.Payee.mergeoldbalance.tonewbalance">
		<query-param name="id" type="long" />
		<query-param name="status" type="boolean" />
		<query-param name="balance" type="double" />
		<query-param name="company" type="Company" />
		update com.vimukti.accounter.core.Payee set
		balance=:balance,isActive=:status where
		id=:id and company=:company
	</query>

	<query name="update.mergeVendor.PurchaseOrder.old.tonew">
		<query-param name="fromID" type="long" />
		<query-param name="toID" type="long" />
		<query-param name="company" type="Company" />
		update com.vimukti.accounter.core.PurchaseOrder set vendor.id=:toID
		where
		vendor.id=:fromID and company=:company
	</query>


	<query name="update.mergeVendor.CashPurchase.old.tonew">
		<query-param name="fromID" type="long" />
		<query-param name="toID" type="long" />
		<query-param name="company" type="Company" />
		update com.vimukti.accounter.core.CashPurchase set vendor.id=:toID
		where
		vendor.id=:fromID and company=:company
	</query>

	<query name="update.mergeVendor.CreditCardCharge.old.tonew">
		<query-param name="fromID" type="long" />
		<query-param name="toID" type="long" />
		<query-param name="company" type="Company" />
		update com.vimukti.accounter.core.CreditCardCharge set vendor.id=:toID
		where
		vendor.id=:fromID and company=:company
	</query>

	<query name="update.mergeVendor.EnterBill.old.tonew">
		<query-param name="fromID" type="long" />
		<query-param name="toID" type="long" />
		<query-param name="company" type="Company" />
		update com.vimukti.accounter.core.EnterBill set vendor.id=:toID
		where
		vendor.id=:fromID and company=:company
	</query>

	<query name="update.mergeVendor.ItemReceipt.old.tonew">
		<query-param name="fromID" type="long" />
		<query-param name="toID" type="long" />
		<query-param name="company" type="Company" />
		update com.vimukti.accounter.core.ItemReceipt set vendor.id=:toID
		where
		vendor.id=:fromID and company=:company
	</query>
	<query name="update.mergeVendor.PayBill.old.tonew">
		<query-param name="fromID" type="long" />
		<query-param name="toID" type="long" />
		<query-param name="company" type="Company" />
		update com.vimukti.accounter.core.PayBill set vendor.id=:toID
		where
		vendor.id=:fromID and company=:company
	</query>
	<query name="update.mergeVendor.transactionMakeDeposit.old.tonew">
		<query-param name="fromID" type="long" />
		<query-param name="toID" type="long" />
		<query-param name="company" type="Company" />
		update com.vimukti.accounter.core.TransactionMakeDeposit set
		vendor.id=:toID where
		vendor.id=:fromID and company=:company
	</query>
	<query name="update.mergeVendor.vendorCreditMemo.old.tonew">
		<query-param name="fromID" type="long" />
		<query-param name="toID" type="long" />
		<query-param name="company" type="Company" />
		update com.vimukti.accounter.core.VendorCreditMemo set
		vendor.id=:toID
		where
		vendor.id=:fromID and company=:company
	</query>
	<query name="update.mergeVendor.writeCheck.old.tonew">
		<query-param name="fromID" type="long" />
		<query-param name="toID" type="long" />
		<query-param name="company" type="Company" />
		update com.vimukti.accounter.core.WriteCheck set
		vendor.id=:toID where
		vendor.id=:fromID and company=:company
	</query>
	<query name="update.mergeVendor.Entry.old.tonew">
		<query-param name="fromID" type="long" />
		<query-param name="toID" type="long" />
		<query-param name="company" type="Company" />
		update com.vimukti.accounter.core.Entry set
		vendor.id=:toID where
		vendor.id=:fromID and company=:company
	</query>
	<query name="update.mergeVendor.Item.old.tonew">
		<query-param name="fromID" type="long" />
		<query-param name="toID" type="long" />
		<query-param name="company" type="Company" />
		update com.vimukti.accounter.core.Item set
		preferredVendor.id=:toID
		where
		preferredVendor.id=:fromID and company=:company
	</query>

	<query name="delete.vendorentry.old">
		<query-param name="from" type="long" />
		<query-param name="company" type="Company" />
		delete from com.vimukti.accounter.core.Entry where vendor.id=:from and
		vendor.company=:company
	</query>

	<query name="update.mergeItem.oldcost.tonewcost">
		<query-param name="from" type="long" />
		<query-param name="status" type="boolean" />
		<query-param name="price" type="double" />
		<query-param name="company" type="Company" />
		update com.vimukti.accounter.core.Item set
		salesPrice=:price,isActive=:status
		where
		id=:from and company=:company
	</query>


	<query name="update.merge.Account.oldBalance.tonew">
		<query-param name="from" type="long" />
		<query-param name="balance" type="double" />
		<query-param name="company" type="Company" />
		update com.vimukti.accounter.core.Account set openingBalance=:balance
		where
		id=:from and company=:company
	</query>

	<query name="delete.account.old">
		<query-param name="from" type="long" />
		<query-param name="company" type="Company" />
		delete from com.vimukti.accounter.core.AccountTransaction where
		account.id=:from and company=:company
	</query>

	<query name="delete.account.entry.old">
		<query-param name="from" type="long" />
		<query-param name="company" type="Company" />
		delete from com.vimukti.accounter.core.Entry where account.id=:from
		and account.company=:comany
	</query>
	<query name="update.Entry.oldNameTo.newName">
		<query-param name="newName" type="string" />
		<query-param name="oldName" type="string" />
		<query-param name="company" type="Company" />
		update com.vimukti.accounter.core.Entry set memo=:newName where
		memo=:oldName and account.company=:company
	</query>

	<query name="get.TransactionDate.from.TransactionbyDate">
		<query-param name="date" type="com.vimukti.accounter.core.LongUseType" />
		<query-param name="company" type="Company" />
		select t.transactionDate from com.vimukti.accounter.core.Transaction t
		where t.transactionDate
		&lt;:date and t.company=:company
	</query>


	<query name="getFisaclId.andSum.fromAccountTransaction">
		<query-param name="startDate" type="com.vimukti.accounter.core.LongUseType" />
		<query-param name="endDate" type="com.vimukti.accounter.core.LongUseType" />
		<query-param name="company" type="Company" />
		select at.account.id as accountId, sum(at.amount) as amount from
		com.vimukti.accounter.core.AccountTransaction at where
		at.company=:company and at.account.type
		in (14,15,16,17,18) and
		at.transaction.transactionDate between
		:startDate and :endDate group
		by
		at.account.id
	</query>

	<query name="getDepreciation.byFixedAsset.andWithDetails">
		<query-param name="company" type="Company" />
		<query-param name="date" type="com.vimukti.accounter.core.LongUseType" />
		<query-param name="status" type="int" />
		<query-param name="id" type="long" />
		select d from com.vimukti.accounter.core.Depreciation
		d inner join
		d.fixedAsset where d.company=:company and d.depreciateFrom
		>= :date and
		d.status=:status and d.fixedAsset.id=:id group by d.fixedAsset.id
	</query>


	<query name="getEntry.byId.andMax">
		<query-param name="company" type="Company" />
		select e.voucherNumber from
		com.vimukti.accounter.core.Entry e where
		e.id = (select max(e1.id) from com.vimukti.accounter.core.Entry e1
		where e1.account.company=:company )
	</query>

	<query name="getCustomerNumber.orderBy.customerNumber">
		<query-param name="company" type="Company" />
		select c.number from
		com.vimukti.accounter.core.Customer c where
		c.company=:company order by c.number
	</query>
	<query name="getVendorNumber.byId.andOrder">
		<query-param name="company" type="Company" />
		select v.vendorNumber from
		com.vimukti.accounter.core.Vendor v where
		v.company=:company order by v.id
	</query>

	<query name="getassestNumber.from.FixedAsset">
		<query-param name="company" type="Company" />
		select f.assetNumber from
		com.vimukti.accounter.core.FixedAsset f where
		f.company=:company
	</query>

	<query name="getTransactionNumber.by.type">
		<query-param name="transactionType" type="int" />
		<query-param name="company" type="Company" />
		select t.number from com.vimukti.accounter.core.Transaction t where
		t.type =:transactionType and t.company=:company
	</query>

	<query name="getFlow.by.Id.from.Account">
		<query-param name="company" type="Company" />
		select a.flow from com.vimukti.accounter.core.Account
		a where a.id=
		(select max(a1.id) from
		com.vimukti.accounter.core.Account a1 where
		a1.company=:company and a1.parent is null)
	</query>

	<query name="getCount.from.Account.and.parent">
		<query-param name="parentId" type="long" />
		<query-param name="company" type="Company" />
		select count(*) from com.vimukti.accounter.core.Account a where
		a.parent.id=:parentId and a.company=:company
	</query>


	<query name="getAllUsers">
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.User user where user.company=:company
	</query>

	<query name="getPayBill.form.accountId.and.status">
		<query-param name="accountId" type="long" />
		<query-param name="status" type="int" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.PayBill pst where pst.company=:company
		and pst.payFrom.id =:accountId and pst.isVoid=false and pst.status
		=:status
	</query>

	<query name="getPayVAT.form.accountId.and.status">
		<query-param name="accountId" type="long" />
		<query-param name="status" type="int" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.PayVAT pv where pv.company=:company
		and pv.payFrom.id =:accountId and pv.isVoid=false and pv.status
		=:status
	</query>

	<query name="getReceiveVAT.form.accountId.and.status">
		<query-param name="accountId" type="long" />
		<query-param name="status" type="int" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.ReceiveVAT rv where
		rv.company=:company and rv.depositIn.id
		=:accountId and rv.isVoid=false
		and rv.status =:status
	</query>

	<query name="getCreditCardCharge.form.accountId.and.status">
		<query-param name="accountId" type="long" />
		<query-param name="status" type="int" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.CreditCardCharge pst where
		pst.company=:company and
		pst.payFrom.id =:accountId and
		pst.isVoid=false
		and pst.status
		=:status
	</query>

	<query name="getCashPurchase.form.accountId.and.status">
		<query-param name="accountId" type="long" />
		<query-param name="status" type="int" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.CashPurchase pst where
		pst.company=:company and pst.payFrom.id
		=:accountId and
		pst.isVoid=false and pst.status =:status
	</query>

	<query name="getCustomerPrePayment.form.accountId.and.status">
		<query-param name="accountId" type="long" />
		<query-param name="status" type="int" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.CustomerPrePayment cpp where
		cpp.company=:company and
		cpp.depositIn.id =:accountId and
		cpp.isVoid=false
		and cpp.status
		=:status
	</query>

	<query name="getCashPurchase.form.status">
		<query-param name="status" type="int" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.CashPurchase cc where
		cc.company=:company and cc.status
		=:status
	</query>

	<query name="getCreditCardCharge.form.status">
		<query-param name="status" type="int" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.CreditCardCharge cc where
		cc.status=:status
	</query>

	<query name="getPayBill.form.status">
		<query-param name="status" type="int" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.PayBill pb where pb.company=:company
		and
		pb.status =:status
	</query>

	<query name="getFlowList.form.Account.byId">
		<query-param name="parentId" type="long" />
		<query-param name="flow" type="string" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.Account a where a.company=:company and
		a.parent.id=:parentId and a.flow !=:flow order by a.id
	</query>

	<query name="getListofNames.from.customerGroup">
		<query-param name="company" type="Company" />
		<query-param name="name" type="String" />
		from com.vimukti.accounter.core.CustomerGroup C where
		C.company=:company and C.name=:name
	</query>

	<query name="getNameofBank.from.Bank">
		<query-param name="company" type="Company" />
		<query-param name="name" type="String" />
		from com.vimukti.accounter.core.Bank B where
		B.name=:name and
		B.company=:company
	</query>

	<query name="getMaxDepreciation.from.Depreciation.byStatus">
		<query-param name="company" type="Company" />
		<query-param name="depreciationFor" type="int" />
		<query-param name="status" type="int" />
		from com.vimukti.accounter.core.Depreciation d where
		d.company=:company and
		d.id=((select
		max(d1.id) from
		com.vimukti.accounter.core.Depreciation
		d1 where
		d1.depreciationFor =
		:depreciationFor and d1.status=:status))
	</query>

	<query name="getDepreciation.from.DepreciationFom.andStatus">
		<query-param name="company" type="Company" />
		<query-param name="depreciationFrom" type="int" />
		<query-param name="status" type="int" />
		from com.vimukti.accounter.core.Depreciation d where
		d.depreciateFrom
		>=:depreciationFrom and d.status=:status
	</query>

	<query name="getTransaction.by.Transactiondates">
		<query-param name="startDate" type="com.vimukti.accounter.core.LongUseType" />
		<query-param name="endDate" type="com.vimukti.accounter.core.LongUseType" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.Transaction t where t.company=:company
		and t.transactionDate between :startDate and :endDate
	</query>

	<query name="getFisacalyear.by.Startdate">
		<query-param name="status" type="int" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.FiscalYear f where f.company=:company
		order by f.startDate
	</query>

	<query name="getItem.by.Name">
		<query-param name="company" type="Company" />
		<query-param name="name" type="String" />
		from com.vimukti.accounter.core.Item I where
		I.company=:company and
		I.name=:name
	</query>

	<query name="getNameofAccount.by.Name">
		<query-param name="company" type="Company" />
		<query-param name="name" type="String" />
		from com.vimukti.accounter.core.Account a where a.company=:company and
		a.name =:name
	</query>

	<query name="get.Entry">
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.Entry e where
		e.journalEntry.company=:company
	</query>

	<query name="getPaymentTerms.by.Name">
		<query-param name="company" type="Company" />
		<query-param name="name" type="String" />
		from com.vimukti.accounter.core.PaymentTerms P where
		P.company=:company and P.name=:name
	</query>

	<query name="getShippingmethod.by.Name">
		<query-param name="company" type="Company" />
		<query-param name="name" type="String" />
		from com.vimukti.accounter.core.ShippingMethod S
		where
		S.company=:company and S.name=:name
	</query>

	<query name="getShippingTerms.by.Name">
		<query-param name="company" type="Company" />
		<query-param name="name" type="String" />
		from com.vimukti.accounter.core.ShippingTerms S where
		S.company=:company and S.name=:name
	</query>

	<query name="getTaxAgency.by.Name">
		<query-param name="company" type="Company" />
		<query-param name="name" type="String" />
		from com.vimukti.accounter.core.TAXAgency V where V.company=:company
		and V.name=:name
	</query>

	<query name="getTaxCode.by.id">
		<query-param name="company" type="Company" />
		<query-param name="id" type="long" />
		from com.vimukti.accounter.core.TAXCode t where
		t.company=:company and
		t.id =:id
	</query>

	<query name="getTaxACode.inTaxitem.by.id">
		<query-param name="id" type="long" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.TAXCode t where
		t.company=:company and
		t.id =:id
	</query>

	<query name="getTaxrate.by.TransactioId.and.Vatreturn">
		<query-param name="company" type="Company" />
		<query-param name="id" type="long" />
		from com.vimukti.accounter.core.TAXRateCalculation vr
		where
		vr.taxItem.company=:company and vr.transactionItem.transaction.id=:id
		and
		vr.vatReturn is not null
	</query>

	<query name="getTaxAdjustment.by.dates">
		<query-param name="company" type="Company" />
		<query-param name="fromDate" type="com.vimukti.accounter.core.LongUseType" />
		<query-param name="toDate" type="com.vimukti.accounter.core.LongUseType" />
		from com.vimukti.accounter.core.TAXAdjustment v where
		v.taxItem.company=:company and
		v.transactionDate between :fromDate and
		:toDate
		and v.isFiled = false
	</query>

	<query name="getTaxrateCalc.by.taxitem.and.details">
		<query-param name="toDate" type="com.vimukti.accounter.core.LongUseType" />
		<query-param name="vatAgency" type="long" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.TAXRateCalculation vr where
		vr.taxItem.company=:company and vr.taxItem
		is not null and
		vr.taxAgency.id=:vatAgency and vr.transactionDate
		&lt;=:toDate and
		vr.vatReturn is null
	</query>

	<query name="getTaxrateCalc.by.vatitem.and.details">
		<query-param name="toDate" type="com.vimukti.accounter.core.LongUseType" />
		<query-param name="vatAgency" type="long" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.TAXRateCalculation vr where
		vr.taxItem.company=:company and vr.taxItem
		is not null and
		vr.taxItem.taxAgency.id=:vatAgency and
		vr.transactionDate &gt; :toDate
		and vr.vatReturn is null
	</query>

	<query name="getVendor.by.name">
		<query-param name="company" type="Company" />
		<query-param name="name" type="String" />
		from com.vimukti.accounter.core.Vendor V where
		V.company=:company and
		V.name=:name
	</query>

	<query name="getVendorGroup.by.name">
		<query-param name="company" type="Company" />
		<query-param name="name" type="String" />
		from com.vimukti.accounter.core.VendorGroup V where V.company=:company
		and V.name=:name
	</query>

	<query name="getFixedAsset.by.statusAnd.purchaseDate">
		<query-param name="company" type="Company" />
		<query-param name="date" type="long" />
		from com.vimukti.accounter.core.FixedAsset f where f.company=:company
		and
		f.status = 2 and
		f.purchaseDate &lt;=:date
	</query>

	<query name="getAccount.by.idInAccountList">
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.Account a where a.company=:company and
		a.id in (:accountsList)
	</query>

	<query name="getDepreciation.by.ToandStatus">
		<query-param name="company" type="Company" />
		<query-param name="deprediationTo" type="long" />
		<query-param name="status" type="int" />
		from com.vimukti.accounter.core.Depreciation d where
		d.company=:company and
		d.depreciateTo >= :deprediationTo and
		d.status=:status
	</query>

	<query name="getAccount.by.id">
		<query-param name="company" type="Company" />
		<query-param name="id" type="long" />
		from com.vimukti.accounter.core.Account a where a.id
		=:id
	</query>

	<query name="getTaxCalc.by.TaxAgencyId.and.withOtherDetails">
		<query-param name="fromDate" type="com.vimukti.accounter.core.LongUseType" />
		<query-param name="toDate" type="com.vimukti.accounter.core.LongUseType" />
		<query-param name="taxAgency" type="long" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.TAXRateCalculation vr where
		vr.taxItem.company=:company and
		vr.taxItem.taxAgency.id=:taxAgency and
		vr.taxItem is not null and
		vr.transactionDate between :fromDate and
		:toDate
		group by
		vr.id,vr.transactionItem,vr.taxItem order by
		vr.transactionItem,vr.taxItem
	</query>

	<query name="getTaxrateCalc.by.TaxAgencyandItem.and.Dates">
		<query-param name="fromDate" type="com.vimukti.accounter.core.LongUseType" />
		<query-param name="toDate" type="com.vimukti.accounter.core.LongUseType" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.TAXRateCalculation vr where
		vr.taxItem
		is not null and vr.taxItem.company=:company and vr.transactionDate
		between :fromDate and :toDate group by
		vr.id,vr.transactionItem,vr.taxItem order by
		vr.transactionItem,vr.taxItem
	</query>

	<query name="getTaxadjustment.by.allDetails.withOrder">
		<query-param name="fromDate" type="com.vimukti.accounter.core.LongUseType" />
		<query-param name="toDate" type="com.vimukti.accounter.core.LongUseType" />
		<query-param name="taxAgency" type="long" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.TAXAdjustment v where
		v.taxItem.company=:company and
		v.taxItem.taxAgency.id=:taxAgency and
		v.transactionDate between
		:fromDate and :toDate order by v.taxItem
	</query>

	<query name="getTaxadjustment.by.betweenDates">
		<query-param name="fromDate" type="com.vimukti.accounter.core.LongUseType" />
		<query-param name="toDate" type="com.vimukti.accounter.core.LongUseType" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.TAXAdjustment v where
		v.taxItem.company=:company and
		v.transactionDate between :fromDate and
		:toDate
		order by v.taxItem
	</query>

	<query name="getVat.by.taxAgency.and.VatPeriod">
		<query-param name="fromDate" type="com.vimukti.accounter.core.LongUseType" />
		<query-param name="toDate" type="com.vimukti.accounter.core.LongUseType" />
		<query-param name="taxAgency" type="long" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.VATReturn v where v.company=:company
		and
		v.taxAgency.id=:taxAgency and v.VATperiodEndDate between :fromDate
		and
		:toDate
	</query>

	<query name="getVat.by.BetweenendDates">
		<query-param name="fromDate" type="com.vimukti.accounter.core.LongUseType" />
		<query-param name="toDate" type="com.vimukti.accounter.core.LongUseType" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.VATReturn v where v.company=:company
		and v.VATperiodEndDate between :fromDate and :toDate
	</query>

	<query name="getAccount.by.name.and.type">
		<query-param name="company" type="Company" />
		<query-param name="name" type="String" />
		<query-param name="type" type="int" />
		from com.vimukti.accounter.core.Account a where a.company=:company and
		a.name =:name and a.type =:type
	</query>

	<query name="getAccount.by.id.and.type">
		<query-param name="company" type="Company" />
		<query-param name="type" type="int" />
		<query-param name="id" type="long" />
		from com.vimukti.accounter.core.Account a where a.company=:company and
		a.id =:id and a.type =:type
	</query>

	<query name="getcreditandPayments.by.Payieeid.and.balance">
		<query-param name="company" type="Company" />
		<query-param name="id" type="long" />
		from com.vimukti.accounter.core.CreditsAndPayments cp
		where
		cp.payee.company=:company and cp.payee.id
		=:id and cp.balance > 0.0
	</query>

	<query name="getFisacalyear">
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.FiscalYear fs where
		fs.company=:company
	</query>

	<query name="getTAXAdjustments.by.taxAgencyIdand.Date">
		<query-param name="vatAgency" type="int" />
		<query-param name="fromDate" type="LongUseType" />
		<query-param name="toDate" type="LongUseType" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.TAXAdjustment v where
		v.taxItem.company=:company and
		v.taxItem.taxAgency.id=:vatAgency and
		v.transactionDate between
		:fromDate and :toDate and v.isFiled = false
	</query>

	<query name="getTAXRateCalculations.by.taxAgencyIdand.Date">
		<query-param name="toDate" type="com.vimukti.accounter.core.LongUseType" />
		<query-param name="vatAgency" type="int" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.TAXRateCalculation vr where vr.taxItem
		is not null and vr.taxItem.company=:company and
		vr.taxItem.taxAgency.id=:vatAgency and
		vr.transactionDate &lt;=:toDate
		and vr.vatReturn is null
	</query>


	<query name="getDepreciation">
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.Depreciation d where
		d.company=:company and
		d.id =(select
		min(d1.id) from
		com.vimukti.accounter.core.Depreciation
		d1)
	</query>


	<query name="getTransactionDate.by.dates">
		<query-param name="startDate" type="com.vimukti.accounter.core.LongUseType" />
		<query-param name="endDate" type="com.vimukti.accounter.core.LongUseType" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.Transaction t where t.type in
		(4,5,8,10) and t.transactionDate between :startDate and :endDate and
		t.company=:company
	</query>

	<query name="getDepreciation.by.depreciateFrom">
		<query-param name="depreciateFrom" type="com.vimukti.accounter.core.LongUseType" />
		<query-param name="status" type="int" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.Depreciation d where
		d.depreciateFrom
		>= depreciateFrom and d.status=status and d.company =:company
	</query>

	<query name="getWriteCheck.by.status">
		<query-param name="company" type="Company" />
		<query-param name="status" type="int" />
		from com.vimukti.accounter.core.WriteCheck wc where
		wc.status = status
		and wc.company=:company
	</query>

	<query name="getWriteCheck.by.bankacountIdandstatus">
		<query-param name="status" type="int" />
		<query-param name="id" type="long" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.WriteCheck wc where
		wc.bankAccount.id
		=id and wc.isVoid=false and wc.status =status and wc.company=:company
	</query>

	<query name="getCustomerRefund.by.isvoidandstatus">
		<query-param name="status" type="int" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.CustomerRefund cr
		where cr.isVoid=false
		and cr.status=status and cr.company=:company
	</query>

	<query name="getPaySalesTax.by.status">
		<query-param name="status" type="int" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.PaySalesTax pst where
		pst.status =
		status and pst.company=:company
	</query>

	<query name="getCustomerRefund.by.payFromand.isvoid.status">
		<query-param name="id" type="long" />
		<query-param name="status" type="int" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.CustomerRefund cr
		where cr.payFrom.id =
		id and cr.isVoid=false and cr.status=status and cr.company=:company
	</query>

	<query name="getPaySalesTax.by.payFromand.isvoid.status">
		<query-param name="id" type="long" />
		<query-param name="status" type="int" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.PaySalesTax pst where
		pst.payFrom.id =
		id and pst.isVoid=false and pst.status = status and
		pst.company=:company
	</query>

	<query name="getCreditsAndPayments.by.check.payeeidandbalanceid">
		<query-param name="id" type="long" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.CreditsAndPayments cp
		where cp.payee.id
		= id and cp.balance > 0.0 and cp.payee.company=:company
	</query>

	<query name="getCustomerRefund">
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.CustomerRefund cr where
		cr.company=:company
	</query>

	<query name="getWriteCheck.by.payToType">
		<query-param name="company" type="Company" />
		<query-param name="type" type="int" />
		from com.vimukti.accounter.core.WriteCheck wc where
		wc.company=:company and wc.payToType=:type
	</query>

	<query name="getFixedAsset.by.checkStatusand.purchaseDate">
		<query-param name="company" type="Company" />
		<query-param name="date" type="long" />
		from com.vimukti.accounter.core.FixedAsset f where f.company=:company
		and f.status = 2 and f.purchaseDate &lt;=:date
	</query>

	<query name="getDepreciation.by.check.idandStatus.depreciationFor">
		<query-param name="company" type="Company" />
		<query-param name="depreciationFor" type="int" />
		<query-param name="status" type="int" />
		from com.vimukti.accounter.core.Depreciation d where
		d.company=:company and
		d.id=((select
		max(d1.id) from
		com.vimukti.accounter.core.Depreciation
		d1 where
		d1.depreciationFor
		=:depreciationFor and d1.status=:status))
	</query>

	<query
		name="getTAXRateCalculation.by.check.taxItemandDates.orderBy.transactionItem">
		<query-param name="startDate" type="com.vimukti.accounter.core.LongUseType" />
		<query-param name="endDate" type="com.vimukti.accounter.core.LongUseType" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.TAXRateCalculation v
		where v.taxItem is
		not null and v.taxItem.company=:company and v.transactionDate between
		:startDate
		and :endDate and
		v.transactionItem.taxCode.isECSalesEntry =
		true group
		by v.id,
		v.transactionItem order by v.transactionItem
	</query>

	<query name="getTAXRateCalculation.by.check.taxItemandDates">
		<query-param name="startDate" type="com.vimukti.accounter.core.LongUseType" />
		<query-param name="endDate" type="com.vimukti.accounter.core.LongUseType" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.TAXRateCalculation v where v.taxItem
		is not null and v.taxItem.company=:company and v.transactionDate
		between :startDate and :endDate and
		v.transactionItem.taxCode.isECSalesEntry = true group by v.id,
		v.transactionItem
	</query>

	<query name="getCashPurchase.by.employeeNmae.expenseStatusandtype">
		<query-param name="employeeName" type="String" />
		<query-param name="type" type="int" />
		<query-param name="expenseStatus" type="int" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.CashPurchase cp where
		cp.company=:company and
		cp.employee.fullName=:employeeName and
		cp.expenseStatus=:expenseStatus
		and
		cp.type=:type and cp.isVoid=false
	</query>

	<query name="getCashPurchase.by.expenseStatusandtype">
		<query-param name="type" type="int" />
		<query-param name="expenseStatus" type="int" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.CashPurchase cp where
		cp.company=:company and
		cp.expenseStatus=:expenseStatus and
		cp.type=:type and cp.isVoid=false
	</query>


	<query name="getEntry.by.id">
		<query-param name="company" type="Company" />
		<query-param name="id" type="long" />
		from com.vimukti.accounter.core.Entry e inner join
		e.journalEntry je
		where je.company=:company and
		je.id =:id
	</query>

	<query name="getEstimate">
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.Estimate e where e.company=:company
	</query>

	<query name="getEstimate.by.check.id.status">
		<query-param name="company" type="Company" />
		<query-param name="id" type="long" />
		from com.vimukti.accounter.core.Estimate e
		where e.company=:company and
		e.customer.id =:id and e.status = 0
	</query>

	<query name="getFiscalYear.by.check.status.startDate">
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.FiscalYear fy where
		fy.company=:company and
		fy.status = 1 order by fy.startDate
	</query>

	<query name="getTransaction.by.check.type.number.id">
		<query-param name="company" type="Company" />
		<query-param name="type" type="int" />
		<query-param name="number" type="String" />
		<query-param name="id" type="long" />
		from com.vimukti.accounter.core.Transaction t
		where t.company =:company
		and
		t.type =:type and
		t.number =:number and t.id !=:id
	</query>
	<query name="get.PayBills.by.tds">
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.PayBill b
		where b.company=:company and
		b.taxAgency !=null
	</query>

	<query name="getJournalEntry">
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.JournalEntry j where
		j.company=:company
	</query>

	<query name="getJournalEntry.by.id">
		<query-param name="id" type="long" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.JournalEntry j where
		j.id =:id and
		j.company=:company
	</query>

	<query name="getTAXRateCalculation.by.check.idandvatReturn">
		<query-param name="id" type="long" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.TAXRateCalculation vr
		where
		vr.transactionItem.transaction.id=:id and vr.vatReturn is not null and
		vr.transactionItem.transaction.company=:company
	</query>

	<query name="getVATReturn.by.check.BalanceGraterThanzero">
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.VATReturn v where
		v.balance &gt;0 and
		v.company=:comapny
	</query>

	<query name="getVATReturn.by.check.BalancelessThanzero">
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.VATReturn v where
		v.balance &lt;0 and
		v.company=:company
	</query>

	<query name="getVATReturn.by.taxagencyandenddate">
		<query-param name="taxAgency" type="int" />
		<query-param name="endDate" type="com.vimukti.accounter.core.LongUseType" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.VATReturn vt where
		vt.taxAgency.id=:taxAgency and vt.VATperiodEndDate=:endDate and
		vt.company=:company
	</query>

	<query name="getVATReturn.by.enddate">
		<query-param name="company" type="Company" />
		<query-param name="endDate" type="com.vimukti.accounter.core.LongUseType" />
		from com.vimukti.accounter.core.VATReturn v where v.VATperiodEndDate =
		:endDate and v.company=:company
	</query>

	<query name="getItem.by.check.isIBuyThisItemisTrue">
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.Item item where
		item.isIBuyThisItem =
		true and item.company=:company
	</query>

	<query name="getTAXRateCalculation.by.datesand.orderby.transactionItem">
		<query-param name="startDate" type="com.vimukti.accounter.core.LongUseType" />
		<query-param name="endDate" type="com.vimukti.accounter.core.LongUseType" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.TAXRateCalculation v
		where v.taxItem is
		not null and v.transactionDate between :startDate
		and :endDate and
		v.taxItem.company=:company group by
		v.id, v.transactionItem order by
		v.transactionItem
	</query>

	<query name="getItem.by.checkisISellThisItemisTrue">
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.Item item where
		item.isISellThisItem =
		true and item.company=:company
	</query>

	<query name="getFixedAsset.by.checkingstatus">
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.FixedAsset f where
		f.status = 3 and
		f.company=:company
	</query>

	<query name="getAccount">
		<query-param name="type1" type="int" />
		<query-param name="type2" type="int" />
		<query-param name="type3" type="int" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.Account a where
		a.type not in
		(type1,type2,type3) and a.company=:company
	</query>

	<query name="getTransactionMakeDeposit.by.id">
		<query-param name="id" type="long" />
		<query-param name="company" type="Company" />
		from
		com.vimukti.accounter.core.TransactionMakeDeposit tmd where tmd.id
		=:id and tmd.depositedTransaction.company=:company
	</query>


	<query name="getTransactionMakeDeposit.by.checking.isDepositedandisVoid">
		<query-param name="company" type="Company" />
		from
		com.vimukti.accounter.core.TransactionMakeDepositEntries at where
		at.transaction.isDeposited = false and at.transaction.isVoid =
		false
		and at.transaction.company=:company
	</query>

	<query
		name="getTAXRateCalculation.checkingby.salesLiabilityAccountName.taxDue">
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.TAXRateCalculation
		pst where
		pst.taxAgency.salesLiabilityAccount.name != 'Un Deposited
		Funds' and
		pst.transactionItem.transaction != null and pst.taxDue != 0 and
		pst.transactionItem.transaction.company=:company
		order by
		pst.taxAgency.id, pst.taxItem.id
	</query>

	<query
		name="getTAXAdjustment.checkingby.salesLiabilityAccount.nameandbalanceDue">
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.TAXAdjustment t where
		t.taxAgency.salesLiabilityAccount.name != 'Un Deposited Funds' and
		t.journalEntry.balanceDue != 0 and t.company=:company order by
		t.taxAgency.id
	</query>

	<query name="getTAXAdjustment.checkingby.transactionDate">
		<query-param name="endDate" type="com.vimukti.accounter.core.LongUseType" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.TAXAdjustment v where
		v.transactionDate &lt;=:endDate and v.company=:company
	</query>

	<query name="getTAXAdjustment.checkingby.VATperiodEndDate">
		<query-param name="endDate" type="com.vimukti.accounter.core.LongUseType" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.VATReturn v where v.VATperiodEndDate
		&lt;=:endDate and v.company=:company
	</query>

	<query name="getTAXRateCalculation.by.datesand.vatReturn">
		<query-param name="startDate" type="com.vimukti.accounter.core.LongUseType" />
		<query-param name="endDate" type="com.vimukti.accounter.core.LongUseType" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.TAXRateCalculation v where v.taxItem
		is not null and v.transactionDate between :startDate and :endDate and
		v.vatReturn is null and v.taxItem.company=:company order by v.taxItem
	</query>



	<query name="getTAXRateCalculation.by.dates">
		<query-param name="startDate" type="com.vimukti.accounter.core.LongUseType" />
		<query-param name="endDate" type="com.vimukti.accounter.core.LongUseType" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.TAXRateCalculation v where v.taxItem
		is not null and v.transactionDate between :startDate and :endDate and
		v.taxItem.company=:company order by v.taxItem
	</query>


	<query name="getTAXAdjustment.by.taxAgencyidanddates">
		<query-param name="taxAgency" type="long" />
		<query-param name="fromDate" type="com.vimukti.accounter.core.LongUseType" />
		<query-param name="toDate" type="com.vimukti.accounter.core.LongUseType" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.TAXAdjustment v where
		v.taxItem.taxAgency.id=:taxAgency and v.transactionDate between
		:fromDate and :toDate and v.isFiled = false and v.company=:company
		order by v.taxItem
	</query>

	<query
		name="getTAXAdjustment.by.dates.orderby.taxItemNameand.TransactionDate">
		<query-param name="startDate" type="com.vimukti.accounter.core.LongUseType" />
		<query-param name="endDate" type="com.vimukti.accounter.core.LongUseType" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.TAXAdjustment v where
		v.transactionDate between :startDate and :endDate and
		v.company=:company order by
		v.taxItem.name,
		v.journalEntry.transactionDate
	</query>

	<query name="getTAXRateCalculation.by.dates.groupedByIdtransactionItem">
		<query-param name="startDate" type="com.vimukti.accounter.core.LongUseType" />
		<query-param name="endDate" type="com.vimukti.accounter.core.LongUseType" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.TAXRateCalculation v where
		v.taxItem.name=:taxItemName and v.transactionDate between :startDate
		and :endDate and v.taxItem.company =:company group by v.id,
		v.transactionItem order by
		v.transactionItem
	</query>


	<query name="getTAXRateCalculation.by.dates.orderbytaxItem.name">
		<query-param name="startDate" type="com.vimukti.accounter.core.LongUseType" />
		<query-param name="endDate" type="com.vimukti.accounter.core.LongUseType" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.TAXRateCalculation v where
		v.taxItem.company=:company and v.taxItem
		is not null and
		(v.isVATGroupEntry = true and v.taxItem != 4 and
		v.taxItem != 12 and
		v.taxItem != 14) or (v.isVATGroupEntry = false) and
		v.transactionDate
		between
		:startDate and :endDate group by v.id,
		v.transactionItem order
		by
		v.taxItem.name
	</query>

	<query name="getFixedAsset.by.purchaseDate">
		<query-param name="purchaseDate" type="com.vimukti.accounter.core.LongUseType" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.FixedAsset fa where
		fa.purchaseDate
		&lt;=purchaseDate and fa.company=:company
	</query>

	<query name="getFiscalYearf">
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.FiscalYear f where f.company=:company
	</query>

	<query name="deleteTAXCode">
		<query-param name="id" type="long" />
		<query-param name="company" type="Company" />
		delete from com.vimukti.accounter.core.TAXCode t
		where t.id=id and
		t.company=:company
	</query>

	<query name="get.developer.by.client">
		<query-param name="client" type="com.vimukti.accounter.core.Client" />
		from com.vimukti.accounter.core.Developer d where d.client =:client
	</query>

	<query name="get.developer.by.id">
		<query-param name="id" type="long" />
		from com.vimukti.accounter.core.Developer d where d.id=:id
	</query>

	<query name="get.developer.by.apiKey">
		<query-param name="apiKey" type="String" />
		from com.vimukti.accounter.core.Developer d where d.apiKey=:apiKey
	</query>

	<query name="get.ServerCompany.by.companyId.and.client">
		<query-param name="id" type="Long" />
		<query-param name="client" type="com.vimukti.accounter.core.Client" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.ServerCompany sc left join sc.clients
		c where sc.id=:id and c=:client
	</query>

	<query name="get.All.Units">
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.Unit where company=:company
	</query>

	<query name="adminUserForEmailId">
		<query-param name="emailid" type="string" />
		from com.vimukti.accounter.core.User user where user.email=:emailid
		and user.isAdmin =true
	</query>

	<query name="getTAXAdjustment.by.dates.and.taxItemName">
		<query-param name="startDate" type="com.vimukti.accounter.core.LongUseType" />
		<query-param name="endDate" type="com.vimukti.accounter.core.LongUseType" />
		<query-param name="taxItemName" type="String" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.TAXAdjustment v where
		v.taxItem.name=:taxItemName and v.transactionDate between :startDate
		and :endDate and v.company=:company order by v.taxItem.name,
		v.journalEntry.transactionDate

	</query>

	<query name="getTAXCode.for.TAXItemGroup">
		<query-param name="id" type="long" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.TAXCode t where
		t.TAXItemGrpForSales.id=:id and t.company=:company
	</query>

	<query name="get.selected.vendors.enterbills.list">
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.EnterBill e where
		e.vendor.isTrackPaymentsFor1099=true and e.company=:company
	</query>

	<query name="get.notselected.vendors.enterbills.list">
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.EnterBill e where
		e.vendor.isTrackPaymentsFor1099=false and e.company=:company
	</query>

	<query name="get.1099.vendors">
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.Vendor v where
		v.isTrackPaymentsFor1099=true and v.company=:company
	</query>

	<query name="get.selected.vendors.enterbills.list.by.id">
		<query-param name="vendorId" type="long" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.EnterBill e where
		e.vendor.id=:vendorId and e.company=:company
	</query>

	<query name="get.transactions.by.account">
		<query-param name="id" type="long" />
		<query-param name="stratDate" type="com.vimukti.accounter.core.LongUseType" />
		<query-param name="endDate" type="com.vimukti.accounter.core.LongUseType" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.AccountTransaction at where
		at.company=:company and
		at.account.id=:id and
		at.transaction.reconciliation is null and
		at.transaction.transactionDate between :startDate and :endDate group
		by at.transaction
	</query>

	<query name="get.Activities.by.date">
		<query-param name="fromDate" type="timestamp" />
		<query-param name="endDate" type="timestamp" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.Activity at where
		at.time between
		:fromDate and :endDate and at.company=:company
	</query>

	<query name="get.reconciliations.by.accountId">
		<query-param name="accountID" type="long" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.Reconciliation re where
		re.account.id=:accountID and re.company=:company
	</query>

	<query name="get.OpeningBalance.Of.Account.from.Reconciliations">
		<query-param name="accountID" type="long" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.Reconciliation re where
		re.account.id=:accountID and re.company=:company order by re.id desc
	</query>

	<query name="get.all.activities.of.transaction">
		<query-param name="transactionId" type="long" />
		<query-param name="company" type="Company" />
		from com.vimukti.accounter.core.Activity act where
		act.objectID=:transactionId and act.company=:company
	</query>

</hibernate-mapping>
