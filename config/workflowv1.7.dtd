<!--
1.changed createdObjectType to objects
2.added objectType to table
3.added objectType,valueproperty,displayproerty to dropdown

-->




<?xml version="1.0" encoding="UTF-8"?>

<!-- DTD generated by XMLSpy v2009 sp1 (http://www.altova.com)-->
<!-- workflow have subelements roles,stages,transitions,form they will be in the same order-->
<!ELEMENT workflow ((automaticstart*, objects, WorkflowPreferences,stages, transitions, forms))>

<!-- workflow have this attribute, author-author of the workflow , name-name of the workflow ,version- version of the workflow -->

<!ATTLIST workflow
	author CDATA #REQUIRED
	name CDATA #REQUIRED
	version CDATA #REQUIRED
	startmanullly (true | false) "true"
	autostart (true | false) "true"
	description CDATA #REQUIRED
	hascoversheet (true|false) "true"
>
<!ELEMENT assert EMPTY>
<!ATTLIST assert 
		id ID #REQUIRED
		assert CDATA #REQUIRED
		fileName CDATA #REQUIRED>
<!ELEMENT objects (object*)>
<!ELEMENT object (action*,object_property*)>
<!ATTLIST object
	id ID #REQUIRED
	parentmust (true | false) "false"
	revisioncount CDATA "0"
	type CDATA #REQUIRED
	creates CDATA #REQUIRED
	candelete (true|false) "false"
	onCreationStartProces (true|false) 'false'
	createdByWorkflow CDATA #IMPLIED>	
<!ELEMENT action EMPTY>
<!ATTLIST action
			actionname CDATA #IMPLIED
			formid CDATA #IMPLIED
			description CDATA #IMPLIED> 
	
<!ELEMENT WorkflowPreferences (precedingName*,showProperties*)>
<!ATTLIST WorkflowPreferences
	id ID #REQUIRED
	creatableObjecs CDATA #IMPLIED
	listOfObjects CDATA #IMPLIED>
<!ELEMENT precedingName EMPTY>
<!ATTLIST precedingName 
			objectType CDATA #IMPLIED 
			precedingName CDATA #IMPLIED>
<!ELEMENT showProperties EMPTY>
<!ATTLIST showProperties 
			objectType CDATA #IMPLIED
			properties CDATA #REQUIRED>			 
	

<!ELEMENT object_property EMPTY>
<!ATTLIST object_property
	id ID #REQUIRED
	name CDATA #REQUIRED
	datatype CDATA #REQUIRED
	order CDATA #REQUIRED
	isDirty (true | false) "false"
	sensitive (true | false) "false"
	>
<!ELEMENT automaticstart EMPTY>
<!ATTLIST automaticstart
	templateId CDATA #REQUIRED
	oncreate (true | false) "false"
	onmodify (true | false) "false"
	type (tool|element) "tool"
>

<!-- stages contains all stages in workflow, subelement stage can be presentted 0 or more time -->
<!ELEMENT stages ((stage*))>
<!-- stage doen't have sublements -->
<!ELEMENT stage EMPTY>
<!-- description stage description
	intial  is it a itial stage 
	name name of the stage
	role -this stage is assigned to which role

-->
<!ATTLIST stage
	id ID #REQUIRED
	description CDATA #REQUIRED
	intial (true | false) #REQUIRED
	name CDATA #REQUIRED
	formId IDREF #REQUIRED
	pageId IDREF #REQUIRED
	left CDATA #REQUIRED
	top CDATA #REQUIRED
	state (isDefult | isClosed | none) #REQUIRED
>
<!-- tansitions- list all transitions,subelement transition can be present o or more times -->
<!ELEMENT transitions ((transition*))>
<!-- tansition have style , 
condition on which it is pointing to another stage ,
 commands-behaviour of the transition  -->
<!ELEMENT transition (transitionstyle, (simple_condition | newformula )?,commands*)>
<!-- id represent transition uniquely
	 source id of the stage from which this transition is started
	 destination id of the stage to which this transition is pointing to-->
<!ATTLIST transition
	id ID #REQUIRED
	source IDREF #REQUIRED
	destination IDREF #REQUIRED
	isparalle (true | false) "false"
	synch_id IDREF #IMPLIED
	noCondition (true|false) "true"
>
<!-- tansition style will have position  -->
<!ELEMENT transitionstyle ((position?))>
<!--captionbox  -->
<!ATTLIST transitionstyle
	captionbox CDATA #REQUIRED
	backgorund CDATA #REQUIRED
	line CDATA #REQUIRED
	pictuer CDATA #IMPLIED
	text CDATA #IMPLIED
>
<!-- This element will reprent a simpel conditions like " field isequal  field2 " it doen't contain any sub  elements -->
<!ELEMENT simple_condition EMPTY>
<!-- fied1 - value
	 condition comparetion operator
	  field2 value -->
<!ATTLIST simple_condition
	formid IDREF #REQUIRED
	pageid IDREF #REQUIRED
	controlid IDREF #REQUIRED
	condition (isequal | notequal | lessthan | greterthan | lessthaorequal | greaterthanorequal | isempty) "isequal"
	value CDATA #IMPLIED
>
<!-- nocondition  transition doen't have condition to point to another stage , so it will executed always 
Note -this tag can be used other -->
<!ELEMENT nocondition (#PCDATA)>
<!-- Represents position of the control -->
<!-- To groups all forms in workflow taken this element -->
<!ELEMENT forms (form*)>
<!-- size size of the form
		comamnds behaviour of the form 
		page thier can be 0 or more pages in form -->
<!ELEMENT form (instancName, formsize, style, page*, behaviour*)>
<!ELEMENT style EMPTY>
<!-- title name of the form
	version of the form-->
<!ELEMENT instancName (text_or_number | date | state | value_ofa_field | special)>
<!ATTLIST form
	id ID #REQUIRED
	title CDATA #REQUIRED
	version CDATA #REQUIRED
	startPage CDATA #REQUIRED
	objects CDATA #IMPLIED
	isSavedinFormData (true|false) "false"
	formtype (custom | screen_large | screen_medium | screen_small | print_letter | print_excutive | print_lega | print_DINA4 | print_DINA5 | print_DINB4 | print_DINB5) "custom"
>
<!ELEMENT objectForm (instancName, formsize, style, page*, behaviour*)>
<!ATTLIST objectForm
	id ID #REQUIRED>
<!-- page has style behaviour and contorls as a sub elements -->
<!ELEMENT page (pagestyle, controls, behaviour*)>
<!-- state state of the page
	name of the page -->
<!ATTLIST page
	id ID #REQUIRED
	name CDATA #REQUIRED
	state (default | hidden | normal) "default"
	pageNo CDATA #REQUIRED
>
<!--pagestyle element is te define style of teh page-->
<!ELEMENT pagestyle (theme)>
<!ATTLIST pagestyle
	backgorund CDATA ""
	picture IDREF #IMPLIED 
	preload (true|false) "true"
	align (left|center|right) "left"
>
<!-- formsize is to represent size of the form -->
<!ELEMENT formsize EMPTY>
<!-- height of the form
	type form type
	width form width -->
<!ATTLIST formsize
	height CDATA #REQUIRED
	dpi CDATA #REQUIRED
	unit CDATA #REQUIRED
	width CDATA #REQUIRED
>
<!-- comamnds is to represents behaviour of the controls -->
<!ELEMENT commands (cmd_rescheduled*,cmd_editObject*,cmd_createObject*,cmd_start*, cmd_exit*, cmd_simplebranch*, cmd_multibranch*, cmd_run_behaviour*, cmd_comment*, cmd_submitdata*, cmd_close*, cmd_showmessage*, cmd_showpage*, cmd_showurl*, cmd_canclesubmission*, cmd_print*, cmd_setfield*, cmd_copyfield*, cmd_setproperty*, cmd_show*, cmd_setstate*, cmd_setselectionitems*, cmd_start_or_stop*, cmd_settablerows*, cmd_notify*, cmd_setnextstage*, cmd_cancel_notify*, cmd_showform*, cmd_connector*)*>
<!-- cmd_start is to indicate start of the baheviour, thier can be only one connector from this command -->
<!ELEMENT cmd_createObject (summary)>
<!ATTLIST cmd_createObject
			type CDATA #IMPLIED
			id ID #REQUIRED>
<!ELEMENT cmd_editObject (summary)>
<!ATTLIST cmd_editObject
			formid CDATA #IMPLIED
			id ID #REQUIRED>

<!ELEMENT cmd_rescheduled (value_field)>
<!ATTLIST cmd_rescheduled 
	id ID #REQUIRED>
	
	
<!ELEMENT cmd_start EMPTY>
<!ATTLIST cmd_start
	id ID #REQUIRED
>
<!-- cmd_exit indicates end of the beheviour -->
<!ELEMENT cmd_exit (value_field)>
<!ATTLIST cmd_exit
	id ID #REQUIRED
	cancel_event (true | false) "false"
>

<!--This element is to check special conditions -->
<!ELEMENT special EMPTY>
<!ATTLIST special
	condition (form_role | form_instancenumber | form_instanceid | form_url) "form_role"
>
<!-- cmd_simplebranch is define teh conditional statement its like if statement in java -->
<!ELEMENT cmd_simplebranch (summary, (simple_condition | newformula))>
<!ATTLIST cmd_simplebranch
	id ID #REQUIRED
	trueCommand CDATA #REQUIRED
	falseCommand CDATA #REQUIRED
>
<!-- sumamry of any coomand, summary can be autosummary or user can give specify the summary -->

<!-- cmd_multibranch is to check the multiple conditions, redirected to multiple comamnds-->
<!ELEMENT cmd_multibranch (summary)>

<!-- cmd_multibranch has attribute id to identify this command uniqly -->
<!ATTLIST cmd_multibranch
	id ID #REQUIRED
>

<!-- cmd_run_behaviour -->
<!ELEMENT cmd_run_behaviour (summary)>
<!ATTLIST cmd_run_behaviour
	id ID #REQUIRED
	controlid IDREF #REQUIRED
	behaviour CDATA #IMPLIED
>
<!-- cmd-comment to write any comments ,it doesn't have any sub elements -->
<!ELEMENT cmd_comment EMPTY>
<!-- id is toidentify uniqly this comamnd
	comment actual text of teh comment -->
<!ATTLIST cmd_comment
	id ID #REQUIRED
	comment CDATA #IMPLIED
>
<!ELEMENT connector_condition (connector_condition?)>
<!ATTLIST connector_condition isAlways (true|false) "true">
<!-- cmd_submitdata -afetr submission of data wht action can be performed will be represented in
				command, afetr submission show message or not .it has 2 subtags suammary and redirecturl -->
<!ELEMENT cmd_submitdata (summary, redirecturl)>
<!-- showmessage -afetr submission showmessage or not
		aftersubmission what actions should be taken, close -close the present instance
		open_newinstace  -->
<!ATTLIST cmd_submitdata
	id ID #REQUIRED
	showmessage (true | false) "true"
	message CDATA ""
	after_submission (close | open_newinstance | reopen_sameinstance | close_browserwindow | redirecturl) "close"
>
<!-- redirecturl- to redirect any particlar path -->
<!ELEMENT redirecturl (value_field)>
<!--cmd_close to specify close the present instance ,it has teh sub tag summary-->
<!ELEMENT cmd_close (redirecturl?,summary)>
<!ATTLIST cmd_close
	id ID #REQUIRED
	afterclose (close | closebrowserwindow | redirect_tourl) "close"
>
<!--cmd_showmessage -to show  a message , it has suntags message and summary-->
<!ELEMENT cmd_showmessage (value_field | summary)>
<!-- id -id of the cmd,
	title of the message 
	type - type of message it can be either error, askconfirmation or warning -->
<!ATTLIST cmd_showmessage
	id ID #REQUIRED
	title CDATA #IMPLIED
	type (info | error | askforconfirmation | warning) "info"
>
<!ELEMENT summary EMPTY>
<!-- autosummary is system generated summary of teh command -->
<!ATTLIST summary
	auto_summary (true | false) "true"
	message CDATA ""
>

<!ELEMENT text_or_number (#PCDATA)>
<!--cmd_showpage to show any particular page,subtag is summary  -->
<!ELEMENT cmd_showpage (summary)>
<!-- page to specify nextpage or previouspage,back ,or any specific page -->
<!ATTLIST cmd_showpage
	id ID #REQUIRED
	page (next | previous | backlastshown | specific_page) "next"
	specific_page IDREF #IMPLIED
>
<!-- cmd_showurl -->
<!ELEMENT cmd_showurl (value_field, summary)>
<!ATTLIST cmd_showurl
	id ID #REQUIRED
	browser (pop-up | same) "same"
>
<!ELEMENT value_field (value_or_number|value_ofa_field|formulaspecial_condition|newformula)>
<!--cmd_canclesubmission -->
<!ELEMENT cmd_canclesubmission (summary)>
<!ATTLIST cmd_canclesubmission
	id ID #REQUIRED
>
<!ELEMENT cmd_print (summary)>
<!ATTLIST cmd_print
	id ID #REQUIRED
	pages (allpages | curentpage | specificpage) "allpages"
	specificpage CDATA #IMPLIED
>
<!ELEMENT cmd_setfield (value_field, summary)>
<!ATTLIST cmd_setfield
	id ID #REQUIRED
	field IDREF #REQUIRED
>
<!ELEMENT cmd_copyfield (copyfield*, summary)>
<!ATTLIST cmd_copyfield
	id ID #REQUIRED
>
<!ELEMENT copyfield EMPTY>
<!ATTLIST copyfield
	from CDATA #REQUIRED
	to CDATA #REQUIRED
>
<!ELEMENT cmd_setproperty (value_field, summary)>
<!ATTLIST cmd_setproperty
	id ID #REQUIRED
	controlid IDREF #REQUIRED
	property (width|height|top|left|backgroundColor|toolTip|layer) "width"
>
<!ELEMENT cmd_show (summary)>
<!ATTLIST cmd_show
	id ID #REQUIRED
	object CDATA #IMPLIED
>
<!ELEMENT cmd_setstate (object_states*, summary)>
<!ATTLIST cmd_setstate
	id ID #REQUIRED
>
<!ELEMENT object_states EMPTY>
<!ATTLIST object_states
	object IDREF #REQUIRED
	state (disabled | normal | hidden | readonly) "normal"
>
<!ELEMENT cmd_checkobiligatory (obiligatory_objects*, summary)>
<!ATTLIST cmd_checkobiligatory
	id ID #REQUIRED
	showdefultmessage (true | false) "true"
	message CDATA #IMPLIED
	stopexecution_if_fails (true | false) "true"
>
<!ELEMENT obiligatory_objects (#PCDATA)>
<!ELEMENT cmd_setselectionitems (selection_items*, summary)>
<!ATTLIST cmd_setselectionitems
	id ID #REQUIRED
	controlid IDREF #IMPLIED
>
<!ELEMENT selection_items EMPTY>
<!ATTLIST selection_items
	caption CDATA #REQUIRED
	value CDATA #REQUIRED
>
<!ELEMENT cmd_start_or_stop (summary)>
<!ATTLIST cmd_start_or_stop
	id ID #REQUIRED
	object CDATA #IMPLIED
	action (start | stop | continue) "start"
>
<!ELEMENT cmd_settablerows ((addrow | deleterow | movecurrentrow), summary)>
<!ATTLIST cmd_settablerows
	id ID #REQUIRED
	object CDATA #IMPLIED
>
<!ELEMENT addrow EMPTY>
<!ATTLIST addrow
	at (begining | beforecurrent | end | aftercurrent) "end">
<!ELEMENT deleterow EMPTY>
<!ATTLIST deleterow
	info CDATA "delete"
	askconfirmation (true | false) "true"
>
<!ELEMENT movecurrentrow EMPTY>
<!ATTLIST movecurrentrow
	move (firstrow | previousrow | nextrow | lastrow) "firstrow"
>
<!ELEMENT cmd_notify (notifications*, summary)>
<!ATTLIST cmd_notify
	id ID #REQUIRED
>
<!ELEMENT notifications EMPTY>
<!ATTLIST notifications
	title CDATA #REQUIRED
>

<!-- setnextstage-next will be started
sumamry escription about teh comamnd -->
<!ELEMENT cmd_setnextstage (summary)>
<!ATTLIST cmd_setnextstage
	id ID #REQUIRED
	stage IDREF #REQUIRED
>
<!-- 	cmd_cancel_notify used to specify cancel the notification 
			 sumamary description about this command -->
<!ELEMENT cmd_cancel_notify (summary, (allnotifications | notification_touser | notification_togroup | notification_topoistion | notification_tofixedemail | notifications_toemailtakenfromfield))>
<!ATTLIST cmd_cancel_notify
	id ID #REQUIRED
>
<!-- cancel allnotifications -->
<!ELEMENT allnotifications (#PCDATA)>
<!-- notification to a particular user -->
<!ELEMENT notification_touser (#PCDATA)>
<!-- notification to aparticular group -->
<!ELEMENT notification_togroup (#PCDATA)>
<!-- notification to a particular position -->
<!ELEMENT notification_topoistion (#PCDATA)>
<!-- notification to a particular email  -->
<!ELEMENT notification_tofixedemail (#PCDATA)>
<!-- notification to aparticular toemailtakenfromfield -->
<!ELEMENT notifications_toemailtakenfromfield (#PCDATA)>
<!-- show-form-is to show a form 
	custom-parementers-to add any custom paremeters to the form which is to be shown-->
<!ELEMENT cmd_showform (custom_parameters*, summary)>
<!ATTLIST cmd_showform
	id ID #REQUIRED
>
<!-- form which is going to be shown 
		frominstance will be new or existing 
		fieldtoholdid holds id of form instance
		newwindow-is this a new window true|false
		showerrormessage-error message should be shown or not -->
<!ATTLIST cmd_showform
	form CDATA #IMPLIED
	forminstance (new | existing | child | singlechild | existingchild | parent) "new"
	fieldtoholdid CDATA #IMPLIED
	newwindow (true | false) "true"
	showerrormessage (true | false) "true"
>
<!-- connetor is to connect two commands -->
<!ELEMENT cmd_connector EMPTY>
<!ELEMENT custom_parameters (newformula?)>
<!ATTLIST custom_parameters 
			name CDATA ""
			source CDATA ""
			hasFormula (true|false) "false">
<!-- id idenityfy uniqly 
		caption - name of teh connector
		line  connector line style weather a strightline or curve line
		source indicates start of the connector , its value is id reference of the comamnd from which it start
		destination end of the connector ,value is id reference of the command where it ends -->
<!ATTLIST cmd_connector
	id ID #REQUIRED
	caption CDATA #IMPLIED
	line (stright | curve) "stright"
	caption_boxwidth CDATA "100"
	source IDREF #REQUIRED
	destination IDREF #REQUIRED
>
<!ELEMENT controls ((text*, smalltext*, large_heading*, medium_heading*, small_heading*, picture*, button*, submit_button*, page_button*,text_input*, numaric_input*, multiline_input*, date_input*, time_input*, date_calendar*, checkbox_group*, checkbox*, radiobutton_group*, radiobutton*, dropdown*, list*, bullettext*, verticalseparator*, horizontalseparator*, sound*, movie*, link*, progressbar*, timer*, printbutton*, maskdata_input*, numaric_stepper*, password_input*, attachment*, image_report*, Vertical_slider*, horizantal_slider*, table*,ranking*,show_form_button*,show_Report_button*))*>

<!ELEMENT behaviour (commands)>
<!ATTLIST behaviour
	owner CDATA ""
	status CDATA ""
	
	name (isClicked | isPressed | isShown | mouseOver | mouseAway | changesFieldData | gainsFoucs | losessFocus | keyPressed | starts | ends | isCreated | internalStep | rowAdded | rowDeleted | rowAddedOrDeleted | rowgainsFocus | rowlosessFocus | formopened | pageIsClosed | pageClicked | formOpened | submitsdata | receivesExterenalCall | isClosed) #REQUIRED
>
<!-- common visulas -->
<!--text is defined to display the label,

	 test_style,navigation,behaviour_mouseovertext,behaviour_mouseawaytext,behaviour_textisclick,behaviour_textisshown

     are child elements for text,

     child element  behaviour_mouseovertext,behaviour_mouseawaytext,behaviour_textisclick,behaviour_textisshown

	 can occur zero or one times inside -->
<!ELEMENT text (text_style, navigation, behaviour*)>
<!-- attribute id is to identify the element uniqly,

      name is defined to set name to text,

      text is to defined to set the content to show,

	  HTML is a boolean type to say is it html content or not,

      state is defined to set the visuble state of text component -->
<!ATTLIST text
	id ID #REQUIRED
	name CDATA #IMPLIED
	text CDATA #IMPLIED
	HTML (true | false) "false"
	referenceData CDATA ""
	state (default | normal | disabled | hidden) "default"
>
<!-- element text_style is to describe the dispaly properties of a text -->
<!ELEMENT text_style (styletext, theme)>
<!-- element styletext is defined to set the font to text -->
<!ELEMENT styletext EMPTY>
<!-- attribute fonttype is to set the fonttype of display text,

      fontsize is to set the size of display text,

      fontcolor is to set the display color of text,

      bold is to make font as bold,italic to to make the font as italic-->
<!ATTLIST styletext
	fonttype CDATA "Verdana"
	fontsize CDATA "10"
	fontcolor CDATA "000000"
	bold (false | true) "false"
	italic (false | true) "false"
>
<!-- element theme is defined to set the display theme for text -->
<!ELEMENT theme (#PCDATA)>
<!--element navigation is  to describe display posion and tabbing of a text-->
<!ELEMENT navigation (position, tabbing)>
<!--element position is to describ the display posion in the form -->
<!ELEMENT position EMPTY>
<!--attribute top is to set the x cordinate for the text in the from in pixel,

      left is to set the y cordinate for the text in the from in pixel,

      height is to set the height of the text in pixel,

       widht is to set the width of the text in pixel,

		layer is to set the layer no-->
<!ATTLIST position
	top CDATA "28"
	left CDATA "30"
	widht CDATA "218"
	layer CDATA "18"
	height CDATA "2"
>
<!-- element tabbing -->
<!ELEMENT tabbing EMPTY>
<!-- attribute  tooltip is to set the tooltip for the text -->
<!ATTLIST tabbing
	topindex CDATA "1"
	tooltip CDATA ""
>
<!--smalltext is defined to display the label,

	 test_style,navigation,behaviour_mouseoversmalltext,behaviour_mouseawaysmalltext,behaviour_smalltextisclick,

     behaviour_smalltextisshown are child elements for smalltext,

	 child element  behaviour_mouseoversmalltext,behaviour_mouseawaysmalltext,behaviour_smalltextisclick,

     behaviour_smalltextisshown can occur zero or one time inside -->
<!ELEMENT smalltext (text_style, navigation, behaviour*)>
<!-- attribute id is to identify the element uniqly,

      name is defined set the name to smalltext,

      text is to defined to set the content to show,

	  HTML is a boolean type to say is it html content or not,

      state is defined to set the visuble state of smalltext component -->
<!ATTLIST smalltext
	id ID #REQUIRED
	name CDATA #IMPLIED
	text CDATA #IMPLIED
	referenceData CDATA ""
	HTML (true | false) "false"
	state (default | normal | disabled | hidden) "default"
>
<!-- element large_heading is defined to show heading in large font,

      text_style, navigation, behaviour_mouseoverlargeheading, behaviour_mouseawaylargeheading,

 	  behaviour_largeheadingisclicked, behaviour_largeheadingisshown are the child elements for  large_heading,

	  child element behaviour_mouseoverlargeheading, behaviour_mouseawaylargeheading,

 	  behaviour_largeheadingisclicked, behaviour_largeheadingisshown can occur zero or one times inside-->
<!ELEMENT large_heading (text_style, navigation, behaviour*)>
<!-- attribute id is to identify the element uniqly,

      name is defined to set the name to large_heading,

      text is to defined to set the content to show,

	  HTML is a boolean type  to say is it html content or not,

      state is defined to set the visuble state of large_heading component -->
<!ATTLIST large_heading
	id ID #REQUIRED
	name CDATA #IMPLIED
	text CDATA #IMPLIED
	HTML (true | false) "false"
	state (default | normal | disabled | hidden) "default"
>
<!-- element medium_heading is defined to show heading in medium font,

      text_style, navigation, behaviour_mouseovermediumheading, behaviour_mouseawaymediumheading,

 	  behaviour_mediumheadingisclicked, behaviour_mediumheadingisshown are the child elements for  large_heading,

	  child element behaviour_mouseovermediumheading, behaviour_mouseawaymediumheading,

 	  behaviour_mediumheadingisclicked, behaviour_mediumheadingisshown can occur zero or one times inside-->
<!ELEMENT medium_heading (text_style, navigation, behaviour*)>
<!-- attribute id is to identify the element uniqly,

      name is defined to set the name to medium_heading,

      text is to defined to set the content to show,

	  HTML is a boolean type  to say is it html content or not,

      state is defined to set the visuble state of medium_heading component -->
<!ATTLIST medium_heading
	id ID #REQUIRED
	name CDATA #IMPLIED
	text CDATA #IMPLIED
	HTML (true | false) "false"
	state (default | normal | disabled | hidden) "default"
>
<!-- element small_heading is defined to show heading in medium font,

      text_style, navigation, behaviour_mouseoversmallheading, behaviour_mouseawaysmallheading,

 	  behaviour_smallheadingisclicked, behaviour_mediumheadingisshown are the child elements for  large_heading,

	  child element behaviour_mouseoversmallheading, behaviour_smallheadingisshown,

 	  behaviour_smallheadingisclicked, behaviour_smallheadingisshown can occur zero or one times inside-->
<!ELEMENT small_heading (text_style, navigation, behaviour*)>
<!-- attribute id is to identify the element uniqly,

      name is defined to set the name to small_heading,

      text is to defined to set the content to show,

	  HTML is a boolean type  to say is it html content or not,

      state is defined to set the visuble state of small_heading component -->
<!ATTLIST small_heading
	id ID #REQUIRED
	name CDATA #IMPLIED
	text CDATA #IMPLIED
	HTML (true | false) "false"
	state (default | normal | disabled | hidden) "default"
>
<!-- element picture is defined to show picture,

     imageData,navigation, behaviour_mouseoverpicture, behaviour_mouseawaypicture are child elements,

 	 child element behaviour_mouseoverpicture, behaviour_mouseawaypicture can occur zero or one times inside-->
<!ELEMENT picture (navigation, behaviour*)>
<!-- attribute id is to identify the element uniqly,

      asses is to

       maintain_asspect_ratio is to set the value to maintain aspect ratio of picture while resize the picture,

       strech is to set the value to strech to resize or keep it to orginal size,

		preload is to set the value to pictute is reload before the page is load or after

       -->
<!ATTLIST picture
	id ID #REQUIRED
	assert CDATA #REQUIRED
	maintain_asspect_ratio (true | false) "false"
	strech (true | false) "false"
	preload (true | false) "false"
	state (default | normal | disabled | hidden) "default" 
>
<!-- element button is defined to place the button,

     button_style, navigation, behaviour_buttonispressed, behaviour_buttonisshown are child elements,

 	 child element behaviour_buttonispressed, behaviour_buttonisshown can occur zero or one times inside-->
<!ELEMENT button (button_style, navigation, behaviour*)>
<!--attribute id is to identify the element uniqly,

     name is defined to set the name to button

     caption is to specify the label on button,

     button_type is to specify the button type by defaultly it is push_button type,

     state is defined to set the visuble state of button component -->
<!ATTLIST button
	id ID #REQUIRED
	name CDATA "button"
	caption CDATA "button"
	button_type (push_button | rectanglar_mouseover_button | rounded_mouseover_button) "push_button"
	state (default | normal | disabled | hidden) "default"
>
<!--element button_style is to specify the display property of  button in the page,

     styletext,boarder,background,theme are the child elements to button_style-->
<!ELEMENT button_style (styletext, boarder, background, theme)>
<!-- element boarder is to specify the boarder style to the button-->
<!ELEMENT boarder EMPTY>
<!-- attribute color is to specify the color to boarder of button -->
<!ATTLIST boarder
	color CDATA "CCCCCC"
	corner_radious CDATA "0"
>
<!-- element background is defined to specify the background display properties of  a button-->
<!ELEMENT background EMPTY>
<!--attribute color1 is to specify the starting color to background,

      color2 is to specify the ending color to background,

       cornor_radious is to specify the radious of a button cornor-->
<!ATTLIST background
	normalcolor1 CDATA "CCCCCC"
	normalcolor2 CDATA "CCCCCC"
	overcolor1 CDATA "CCCCCC"
	overcolor2 CDATA "CCCCCC"
	downcolor1 CDATA "CCCCCC"
	downcolor2 CDATA "CCCCCC"
	
>

<!ELEMENT text_input_background EMPTY>
<!ATTLIST text_input_background
	background_color CDATA "CCCCCC">
	

<!-- element submitbutton is defined to place the submitbutton,

     button_style, navigation, behaviour_submitbuttonisshown are child elements,

 	 child element behaviour_submitbuttonisshown can occur zero or one times inside-->
<!ELEMENT submit_button (button_style, navigation, behaviour*)>
<!--attribute id is to identify the element uniqly,

     name is defined to set the name to submitbutton

     caption is to specify the label on submitbutton,

     button_type is to specify the button type by defaultly it is submitbutton type,

     state is defined to set the visuble state of submitbutton component,

      show_confirmation is boolean type to specify show the message after submit button is clicked,

      confirmation_message is to specify the message to display when make  show_confirmation is true-->
<!ATTLIST submit_button
	id ID #REQUIRED
	name CDATA "submitbutton"
	caption CDATA "submitbutton"
	button_type (push_button | rectanglar_mouseover_button | rounded_mouseover_button) "push_button"
	state (default | normal | disabled | hidden) "default"
	show_confirmation (true | false) "true"
	confirmation_message CDATA ""
>
<!-- element pagebutton is defined to place the pagebutton,

     button_style, navigation, behaviour_pagebuttonisshown are child elements,

 	 child element behaviour_pagebuttonisshown can occur zero or one times inside-->
<!ELEMENT page_button (button_style, navigation, behaviour*)>
<!--attribute id is to identify the element uniqly,

     name is defined to set the name to pagebutton

     caption is to specify the label on pagebutton,

     page is to specify the page to show when button is pressed,

     button_type is to specify the pagebutton type by defaultly it is push_button type,

     state is defined to set the visuble state of pagebutton component -->
<!ATTLIST page_button
	id ID #REQUIRED
	name CDATA "pagebutton"
	caption CDATA "pagebutton"
	page_type (next | previous | backto_lastshown | specific) "next"
	specificPage CDATA ""
	button_type (push_button | rectanglar_mouseover_button | rounded_mouseover_button) "push_button"
	state (default | normal | disabled | hidden) "default"
>
<!-- element group is defined to group the components to diaplay,

     gropu_style, navigation, behaviour_groupchangesfielddata, behaviour_groupisshown,behaviour_groupisclicked are child elements,

 	 child element behaviour_groupchangesfielddata, behaviour_groupisshown,behaviour_groupisclicked can occur zero or one times inside-->
<!ELEMENT group (controls,group_style, navigation, behaviour*)>
<!---attribute id is to identify the element uniqly,

     name is defined to set the name to group,

     hasheader is a boolean type to specify the gropu has header or not,

     caption is to specify the label on group,

     height is to specify the height of the group,

     align is to specify the component should from left or center or right,

     state is defined to set the visuble state of group component,

     obligatory is to

     obligatory_answer is to-->
<!ATTLIST group
	id ID #REQUIRED
	name CDATA "group"
	hasheader (true | false) "false"
	caption CDATA "Group"
	height CDATA "10"
	align (left | center | right) "left"
	state (default | normal | disabled | hidden) "default"
	obligatory (true | false) "false"
	obligatory_answer CDATA ""
>
<!--element group_style is specify the display properites for group component-->
<!ELEMENT group_style (styletext, header, group_background, theme)>
<!ATTLIST  group_style
			boarder_type (solid|none) "solid"
			boarder_color CDATA "000000"
			boarder_size CDATA "1"
			boarder_radius CDATA "0">
<!ELEMENT 	group_background EMPTY>
<!ATTLIST 	group_background
				background_color CDATA "FFFFFF"
				tranparent (true|false) "false"
				assest IDREF #REQUIRED
				align (center|strech|tile|horizantal|vertical) "center"
				preload (true|false) "true">
				
	
<!-- element is to specify the header color of group-->
<!ELEMENT header (#PCDATA)>
<!-- commom inputs -->
<!--element text_input is defined to read the text from user,

     textinput has subelements main,style,navigation,behaviour_text_input_gain_focus,

     behaviour_text_input_key_pressed,behaviour_text_input_loose_focus,behaviour_text_input_onclick,behaviour_text_input_isshown,

     behaviour_text_input_data_changes are child elements,behaviour_text_input_gain_focus, 

     behaviour_text_input_key_pressed,behaviour_text_input_loose_focus,behaviour_text_input_onclick,behaviour_text_input_isshown,

     behaviour_text_input_data_changes  can occur zero or one times inside-->
<!ELEMENT text_input (textinput_style, navigation, behaviour*)>
<!--attribute id is to identify the element uniqly,

     name is defined to set the name to group,

     state is defined to set the visuble state of group component,

     text is defined to show the text on input_text component-->
<!ATTLIST text_input
	id ID #REQUIRED
	name CDATA ""
	text CDATA ""
	title CDATA ""
	maxChars CDATA "99"
	formate (numaric | none | alpha | alphanumaric | email | phone | custom | url) "none"
	custom_formate CDATA ""
	align (left | center | right) "left"
	data IDREF #REQUIRED
	referenceData CDATA ""
	state (default | normal | disabled | hidden) "default"
	isRequired (true|false) "false"
>
<!--textinput_style is to specify the display properties for text_input -->
<!ELEMENT textinput_style (styletext, theme, boarder, text_input_background)>
<!--element multiline_text_input is defined to read the text from user in multi lines,

      multiline_text_input has subelements main,style,navigation,behaviour_multiline_input_gain_focus,

     behaviour_multiline_input_key_pressed,behaviour_multiline_input_loose_focus,behaviour_multiline_input_onclick,behaviour_multiline_input_isshown,

     behaviour_multiline_input_data_changes are child elements,behaviour_text_input_gain_focus, 

     behaviour_multiline_input_gain_focus,

     behaviour_multiline_input_key_pressed,behaviour_multiline_input_loose_focus,behaviour_multiline_input_onclick,behaviour_multiline_input_isshown,

     behaviour_multiline_input_data_changes  can occur zero or one times inside-->
<!ELEMENT multiline_input (multiline_text_style, navigation, behaviour*)>
<!--attribute id is to identify the element uniqly,

     name is defined to set the name to multiline_text_input,

     state is defined to set the visuble state of multiline_text_input component,

     text is defined to show the text on multiline_text_input component-->
<!ATTLIST multiline_input
	id ID #REQUIRED
	name CDATA ""
	text CDATA ""
	title CDATA ""
	data IDREF #REQUIRED
	maxchars CDATA "100"
	referenceData CDATA ""
	align (left | center | right) "left"
	state (default | normal | disabled | hidden) "default"
	isRequired (true|false) "false"
>
<!--multiline_text_style is to describe the display properties for multiline_text_input -->
<!ELEMENT multiline_text_style (styletext, theme)>
<!ATTLIST multiline_text_style 
			boarder_type (solid|none) "solid"
			boarder_color CDATA "000000"
			boarder_size CDATA "1"
			boarder_radius CDATA "0"
			backgroud_color CDATA "FFFFFF"
			vertical_scroolbar (true | false) "false"
			horizantal_scrollbar (true | false) "false"
			>

<!--element numaric_input is defined to read the numaric value from user,

      numaric_input has subelements numaric_input_style,navigation,behaviour_numaric_input_gain_focus,

     behaviour_numaric_input_key_pressed,behaviour_numaric_input_loose_focus,behaviour_numaric_input_onclick,behaviour_numaric_input_isshown,

     behaviour_numaric_input_data_changes are child elements,behaviour_text_input_gain_focus, 

     behaviour_numaric_input_gain_focus,

     behaviour_numaric_input_key_pressed,behaviour_numaric_input_loose_focus,behaviour_numaric_input_onclick,behaviour_numaric_input_isshown,

     behaviour_numaric_input_data_changes  can occur zero or one times inside-->
<!ELEMENT numaric_input (numaric_input_style, navigation, behaviour*)>
<!--attribute id is to identify the element uniqly,

     name is defined to set the name to numaric_input,

     state is defined to set the visuble state of numaric_input component,

     number is defined to show the number on numaric_input component,

     allownagative is defined to set the numaric_input can accept nagatice values or not,

     min is defined to set the minimum value the numaric_input can accept,

	 max is defined to set the maximum value the numaric_input can accept,

     decimal is defined to set to show no of digits after decimal point,

     decimal_separator is to defined to set to show which symbol has to display at decimal point,

     thousend_separator is to defined to set to show which symbol has to display at thousend separator -->
<!ATTLIST numaric_input
	id ID #REQUIRED
	name CDATA "numaric input"
	title CDATA ""
	data IDREF #REQUIRED
	number CDATA "0.00"
	allownagative (true | false) "true"
	min CDATA "-99999999"
	max CDATA "99999999"
	decimal CDATA "2"
	referenceData CDATA ""
	show_leading_zero (true | false) "true"
	decimal_separator (coma | pulstop) "pulstop"
	thousend_separator (none | coma | pulstop | slash) "none"
	state (default | normal | disabled | hidden) "default"
	isRequired (true|false) "false"
>
<!--numaric_input_style is defined to set the display properties for numaric_input -->
<!ELEMENT numaric_input_style (styletext, theme, boarder, background)>
<!--element date_input is defined to read the date value from user,

      date_input has subelements date_style,navigation,behaviour_dateinput_changesfielddata,

     behaviour_dateinput_gainsfocus,behaviour_dateinput_losesfocus,behaviour_dateinput_isclicked,behaviour_dateinput_isshown

      are child elements,behaviour_dateinput_changesfielddata,

     behaviour_dateinput_gainsfocus,behaviour_dateinput_losesfocus,behaviour_dateinput_isclicked,behaviour_dateinput_isshown can occur zero or one times inside-->
<!ELEMENT date_input (date_style, navigation, behaviour*)>
<!--attribute id is to identify the element uniqly,

     name is defined to set the name to date_input,

     state is defined to set the visuble state of date_input component,

     date is defined to set the specify the date to diaplay,

     specificDate is defined to set the cuurent date to date_input if date attribute is set to specific,

     startyear is defined to set the staring year in the calendar,

	endyear is defined to set the ending year in the calendar-->
<!ATTLIST date_input
	id ID #REQUIRED
	name CDATA "date input"
	data IDREF #REQUIRED
	title CDATA ""
	date (empty | now | specific) "empty"
	specificDate CDATA ""
	startyear CDATA "1900"
	endyear CDATA "2100"
	referenceData CDATA ""
	formate CDATA "MM/DD/YYYY"
	state (default | normal | disabled | hidden) "default"
	isRequired (true|false) "false"
>
<!-- date_style is defined set the display properties for date_input-->
<!ELEMENT date_style (styletext, boarder, simplebackground, theme)>

<!--element time_input is defined to read the time value from user,

      time_input has subelements text_style,navigation,behaviour_timeinput_chagesfielddata,

     behaviour_timeinput_gainsfocus,behaviour_timeinput_losesfocus,behaviour_timeinput_isclicked,behaviour_timeinput_isshown

      are child elements,behaviour_timeinput_chagesfielddata,

     behaviour_timeinput_gainsfocus,behaviour_timeinput_losesfocus,behaviour_timeinput_isclicked,behaviour_timeinput_isshown can occur zero or one times inside-->
<!ELEMENT time_input (text_style, navigation, behaviour*)>
<!ELEMENT simplebackground EMPTY>
<!ATTLIST simplebackground 
	color CDATA #REQUIRED>
<!--attribute id is to identify the element uniqly,

     name is defined to set the name to time_input,

     state is defined to set the visuble state of time_input component,

     time is defined to set the specify the date to diaplay,

     specifictime is defined to set the current time to time_input if time attribute is set to specific,

     is24hoursclock is a boolean type to set the time_input is 24 hours clock or not,

     showseconds s a boolean type to set to show seconds,

     obligatoryanswer 

     obligatoryanswer_value -->
<!ATTLIST time_input
	id ID #REQUIRED
	name CDATA "time input"
	title CDATA ""
	data IDREF #REQUIRED
	time (empty | now | specific) "empty"
	specifictime CDATA ""
	is24hoursclock (true | false) "true"
	showseconds (true | false) "true"
	referenceData CDATA ""
	state (default | normal | disabled | hidden) "default"
	obligatoryanswer (true | false) "false"
	obligatoryanswer_value CDATA ""
	isRequired (true|false) "false"
>
<!--element date_calendar is defined to read the date value from user by using calendar,

      time_input has subelements date_style,navigation,behaviour_date_calendar_changesfielddata,

     behaviour_date_calendar_isclicked,behaviour_date_calendar_gainsfocus,behaviour_date_calendar_losesfocus,behaviour_date_calendar_isshown

      are child elements,behaviour_timeinput_chagesfielddata,

     behaviour_timeinput_gainsfocus,behaviour_timeinput_losesfocus,behaviour_timeinput_isclicked,behaviour_timeinput_isshown can occur zero or one times 

     inside   -->
<!ELEMENT date_calendar (calender_style, navigation, behaviour*)>
<!--attribute id is to identify the element uniqly,

     name is defined to set the name to date_calendar,

     state is defined to set the visuble state of date_calendar component,

     date is defined to set the specify the date to diaplay,

     specificDate is defined to set the current date to date_input if date attribute is set to specific,

     startyear is defined to set the staring year in the calendar,

	endyear is defined to set the ending year in the calendar-->
<!ATTLIST date_calendar
	id ID #REQUIRED
	name CDATA "date input"
	data IDREF #REQUIRED
	dateType (now | specific) "now"
	specificDate CDATA ""
	startyear CDATA "1900"
	referenceData CDATA ""
	state (default | normal | disabled | hidden) "default"
	endyear CDATA "2100"
	title CDATA ""
	isRequired (true|false) "false"
>
<!ELEMENT calender_style (styletext,theme)>
<!ATTLIST calender_style 
			boarder_type (solid|none) "solid"
			boarder_color CDATA "000000"
			boarder_size CDATA "1"
			boarder_radius CDATA "0"
			backgroud_color CDATA "FFFFFF">
<!--element checkbox_group is defined to group the check boxes,

      group_style,navigation,behaviour_group_changesfielddata,

     behaviour_group_isclicked,behaviour_group_gainsfocus,behaviour_group_isshown 

      are child elements,behaviour_group_chagesfielddata,

     behaviour_group_changesfielddata,

     behaviour__isclicked,behaviour_group_gainsfocus,behaviour_group_isshown can occur zero or one times 

     inside   -->
<!ELEMENT checkbox_group (checkbox*,group_style, navigation, behaviour*)>
<!--attribute id is to identify the element uniqly,

     name is defined to set the name to checkbox_group,

     state is defined to set the visuble state of checkbox_group component,

     hasheader is boolean type to set the checkbox_group has headet or not,

     caption is to set the caption to checkbox_group,

     height is to set the height for the group,

     align is to set the alignments for check boxes in the group,

     bligatoryanswer,bligatoryanswer_value -->
<!ATTLIST checkbox_group
	id ID #REQUIRED
	name CDATA "checkbox group"
	hasheader (true | false) "false"
	caption CDATA "header"
	height CDATA "20"
	referenceData CDATA ""
	align (left | center | right) "left"
	state (default | normal | disabled | hidden) "default"
	obligatoryanswer (true | false) "false"
	obligatoryanswer_value CDATA ""
	isRequired (true|false) "false"
>


      
<!ELEMENT checkbox (date_style, navigation, behaviour*)>
<!---attribute id is to identify the element uniqly,

     name is defined to set the name to checkbox,

     state is defined to set the visuble state of checkbox component,

     caption is to set the  caption for check box,

      checked is to set the value to checkbox,

     bligatoryanswer,bligatoryanswer_value -->
<!ATTLIST checkbox
	id ID #REQUIRED
	name CDATA "check box"
	data IDREF #REQUIRED
	caption CDATA "check"
	checked (true | false) "true"
	referenceData CDATA ""
	state (default | normal | disabled | hidden) "default"
	obligatoryanswer (true | false) "false"
	obligatoryanswer_value CDATA ""
	isRequired (true|false) "false"
>
<!--element radiobutton_group is defined to group the check boxes,

      radiobutton_group has subelements group_style,navigation,behaviour_group_changesfielddata,

     behaviour_group_isclicked,behaviour_group_gainsfocus,behaviour_group_isshown 

      are child elements,behaviour_timeinput_chagesfielddata,

     behaviour_group_changesfielddata,

     behaviour_group_isclicked,behaviour_group_gainsfocus,behaviour_group_isshown can occur zero or one times 

     inside   -->
<!ELEMENT radiobutton_group (radiobutton*,group_style, navigation, behaviour*)>
<!--attribute id is to identify the element uniqly,

     name is defined to set the name to radiobutton_group,

     state is defined to set the visuble state of radiobutton_group component,

     hasheader is boolean type to set the radiobutton_group has headet or not,

     caption is to set the caption to radiobutton_group,

     height is to set the height for the group,

     align is to set the alignments for radio buttons  in the group,

     bligatoryanswer,bligatoryanswer_value -->
<!ATTLIST radiobutton_group
	name CDATA "radiobutton group"
	title CDATA ""
	hasheader (true | false) "false"
	referenceData CDATA ""
	caption CDATA "header"
	height CDATA "20"
	align (left | center | right) "left"
	state (default | normal | disabled | hidden) "default"
	obligatoryanswer (true | false) "false"
	obligatoryanswer_value CDATA ""
	id ID #REQUIRED
	isRequired (true|false) "false"
>
<!-- radiobuttonis defined to select the item,

       radiobutton has child elements    behaviour_radiobutton_changesFieldData,

       behaviour_radiobutton_gainsfocus,behaviour_checkbox_losesfocus,behaviour_radiobutton_isclicked,behaviour_radiobutton_isshown,

       behaviour_radiobutton_changesFieldData,     behaviour_radiobutton_gainsfocus,behaviour_radiobutton_losesfocus,behaviour_radiobutton_isclicked,

        behaviour_radiobutton_isshown can occur zero or one times   inside-->
<!ELEMENT radiobutton (date_style, navigation, behaviour*)>
<!---attribute id is to identify the element uniqly,

     name is defined to set the name to radiobutton,

     state is defined to set the visuble state of radiobutton component,

     caption is to set the  caption for radiobutton,

      checked is to set the value to radiobutton,

     bligatoryanswer,bligatoryanswer_value -->
<!ATTLIST radiobutton
	name CDATA "radiobutton"
	data IDREF #REQUIRED
	title CDATA ""
	caption CDATA "check"
	referenceData CDATA ""
	value CDATA "0"
	checked (true | false) "true"
	state (default | normal | disabled | hidden) "default"
	obligatoryanswer (true | false) "false"
	obligatoryanswer_value CDATA ""
	id ID #REQUIRED
	isRequired (true|false) "false"
>

<!--element dropdown is defined to select single item by list,

      dropdown has subelements button_style,navigation,behaviour_dropdown_changesfielddata,

     behaviour_dropdown_isclicked,behaviour_dropdown_gainsfocus,behaviour_dropdown_isshown 

      are child elements,behaviour_dropdown_chagesfielddata,

     behaviour_dropdown_changesfielddata,

     behaviour_dropdown_isclicked,behaviour_dropdown_gainsfocus,behaviour_dropdown_isshown can occur zero or one times 

     inside   -->
<!ELEMENT dropdown (date_style,item*,navigation, behaviour*)>
<!--attribute id is to identify the element uniqly,

     name is defined to set the name to dropdown,

     state is defined to set the visuble state of  dropdown component,

     bligatoryanswer,bligatoryanswer_value -->
<!-- we have represent items in a table -->
<!ATTLIST dropdown
	id ID #REQUIRED
	title CDATA ""
	name CDATA "drop down"
	list IDREF #REQUIRED
	referenceData CDATA ""
	data IDREF ""
	objectType CDATA ""
	valueproperty CDATA ""
	displayproperty CDATA ""
	state (default | normal | disabled | hidden) "default"
	obligatoryanswer (true | false) "false"
	obligatoryanswer_value CDATA ""
	isRequired (true|false) "false"
>
<!ELEMENT item EMPTY>
<!ATTLIST item 
		caption CDATA ""
		value CDATA ""
		selected (true|false) "false">
<!--element list is defined to select the multiple items by list,

      list has subelements group_style,navigation,behaviour_list_changesfielddata,

     behaviour_list_isclicked,behaviour_list_gainsfocus,behaviour_list_isshown 

      are child elements,behaviour_list_chagesfielddata,

     behaviour_list_changesfielddata,

     behaviour_list_isclicked,behaviour_list_gainsfocus,behaviour_list_isshown can occur zero or one times 

     inside   -->
<!ELEMENT list (item,button_style, navigation, behaviour*)>
<!--attribute id is to identify the element uniqly,

     name is defined to set the name to radiobutton_group,

     state is defined to set the visuble state of radiobutton_group component,

     bligatoryanswer,bligatoryanswer_value -->
<!-- we have represent items in a table -->
<!ATTLIST list
	name CDATA "list"
	data IDREF #REQUIRED
	list IDREF #REQUIRED
	referenceData CDATA ""
	state (default | normal | disabled | hidden) "default"
	obligatoryanswer (true | false) "false"
	obligatoryanswer_value CDATA ""
	allowMultipleSelection (true | false) "false"
	isRequired (true|false) "false"
>
<!ELEMENT list_values (values*)>
<!ELEMENT values EMPTY>
<!ATTLIST values 
		caption CDATA ""
		value CDATA ""
		selected (true|false) "false">
<!-- advanced visulas -->
<!-- bullettext is defined to show the list of items with bullets, bullettext has child elements         text_style,navigation,behaviour_mouseoverbullettext,behaviour_mouseawaybullettext,behaviour_bullettextisclicked-->
<!ELEMENT bullettext (text_style, navigation, behaviour*)>
<!--attribute id is to identify the element uniqly,

     name is defined to set the name to radiobutton_group,

     state is defined to set the visuble state of radiobutton_group component,

     text is a display elements,elements in the text are separated by enter-->
<!ATTLIST bullettext
	id ID #REQUIRED
	name CDATA "Bullet Text"
	text CDATA "text1\ntext2\ntext3"
	state (default | normal | disabled | hidden) "default"
>

<!-- verticalseparator is defined to separate the items by vertically, verticalseparator has child elements         verticalseparator_style,navigation,behaviour_verticalseparatorisshown-->
<!ELEMENT verticalseparator (separator_style, navigation, behaviour*)>
<!--attribute id is to identify the element uniqly,

     name is defined to set the name to behaviour_verticalseparatorisshown,

     state is defined to set the visuble state of behaviour_verticalseparatorisshown component-->
<!ATTLIST verticalseparator
	id ID #REQUIRED
	name CDATA "visual Separator"
	state (default | normal | disabled | hidden) "default"
>
<!ELEMENT separator_style (line, theme)>
<!ELEMENT line EMPTY>
<!ATTLIST line
	color CDATA "000033"
	size CDATA "394"
>
<!ELEMENT horizontalseparator (separator_style?, navigation, behaviour*)>
<!--attribute id is to identify the element uniqly,

     name is defined to set the name to horizontalseparator,

     state is defined to set the visuble state of horizontalseparator component-->
<!ATTLIST horizontalseparator
	id ID #REQUIRED
	name CDATA "visual Separator"
	state (default | normal | disabled | hidden) "default"
>

<!ELEMENT sound (behaviour*)>
<!--attribute id is to identify the element uniqly,

     name is defined to set the name to radiobutton_group,

     autoplay is defined to set the sound is play by automaticaly or not,

      volume is to set the volume to sound-->
<!ATTLIST sound
	id ID #REQUIRED
	name CDATA "sound"
	autoplay (true | false) "true"
	loop (true | false) "false"
	volum CDATA "100"
>

<!-- movie is defined to place the movie, movie has child elements         navigation,behaviour_moviestarts,behaviour_movieends,behaviour_movieiscreated,behaviour_movieisshown-->
<!ELEMENT movie (navigation, behaviour*)>
<!--attribute id is to identify the element uniqly,

     name is defined to set the name to movie,

      autoplay is defined to set the movie is play by automaticaly or not,

      volume is to set the volume to movie,

      loop is set to the movie is play repeatedly or not,

     maaintainsapectratio is set the movie display size  is maintain aspect ration or not  -->
<!ATTLIST movie
	id ID #REQUIRED
	name CDATA "movie"
	maaintainsapectratio (true | false) "true"
	autoplay (true | false) "true"
	loop (true | false) "false"
	volum CDATA "100"
>

<!-- link is defined to set the anchor link, link has child elements         text_style,navigation,behaviour_link_isclikced,behaviour_link_isclikced-->
<!ELEMENT link (link_style, navigation, behaviour*)>
<!--attribute id is to identify the element uniqly,

     name is defined to set the name to link,

     state is defined to set the visuble state of link component,

     caption  is a display caption for link,

     url is to set the url for link,

     url_value is the value of url.

     target is to set the browset target-->
<!ATTLIST link
	id ID #REQUIRED
	name CDATA "link"
	caption CDATA "click here"
	url (text_or_number | value_ofa_field | special | newformula) "text_or_number"
	urlValue CDATA ""
	target (newbrowserwindow | currentbrowserwindow) "newbrowserwindow"
	state (default | normal | disabled | hidden) "default"
>
<!ELEMENT link_style (styletext, mouseover, theme)>
<!ELEMENT mouseover EMPTY>
<!ATTLIST link_style
	mouseover_color CDATA "3333FF"
>

<!-- progressbar is defined to show progress bar by graphicaly, progressbar has child elements         progressbar_style,navigation,behaviour_progressbar_isshown,behaviour_progressbar_isclicked-->
<!ELEMENT progressbar (progressbar_style, navigation, behaviour*)>
<!--attribute id is to identify the element uniqly,

     name is defined to set the name to progressbar,

     state is defined to set the visuble state of progressbar component,

     automatically_show_pageprogress is to set the show the page progress when page is displayed,

     show lable is to set the lable should dispaly or not, 

     lableSize is to set the size of the label-->
<!ATTLIST progressbar
	id ID #REQUIRED
	name CDATA "progess bar"
	automatically_show_pageprogress (true | false) "true"
	value CDATA "0"
	showLabel (true | false) "true"
	labelsize CDATA "1"
	state (default | normal | disabled | hidden) "default"
>
<!ELEMENT progressbar_style (styletext)>
<!ATTLIST progressbar_style
	barcolor CDATA "0000FF"
	boardercolor CDATA "CCCCCC" >


<!-- timer is defined to show the time, timer has child elements         behaviour_timer_changesfielddata,behaviour_timer_starts,behaviour__timer_ends,behaviour_timer_makes_interevalstep-->
<!ELEMENT timer (behaviour*)>
<!--attribute id is to identify the element uniqly,

     name is defined to set the name to timer,

     state is defined to set the visuble state of timer component,

     starttime,endtime is to set the stating and ending time for timer,

     intervaltype is set the type of interval while timer is running,

     direction is set the direction for the timer,

     loop is to set the timer is should repeat or not,

     autostart is to set the timer is start by automaticaaly -->
<!ATTLIST timer
	id ID #REQUIRED
	name CDATA "timer"
	starttime CDATA "0"
	endtime CDATA "60"
	interval CDATA "1"
	intervaltype (seconds | minutes) "seconds"
	direction (up | down) "up"
	loop (true | false) "false"
	autostart (none | start | continue) "none"
>

<!-- printbutton is defined to print the page, printbutton has child elements button_style,navigation,behaviour_printButton_isshown-->
<!ELEMENT printbutton (button_style, navigation, behaviour*)>
<!--attribute id is to identify the element uniqly,

     name is defined to set the name to printbutton,

     state is defined to set the visuble state of printbutton component,

     caption is to set the caption for the timer,

     pages is to set the which pages has to print,

     specificPage is set the pageno to print if pages has set to specific,

     button_type is set to specify the button type -->
<!ATTLIST printbutton
	id ID #REQUIRED
	name CDATA "print Button"
	caption CDATA "print"
	pageType (all | current | specific) "all"
	specificPage CDATA ""
	button_type (push_button | rectanglar_mouseover_button | rounded_mouseover_button) "push_button"
	state (default | normal | disabled | hidden) "default"
>
<!-- maskdata_input is defined to read the data in predefind formate, maskdata_input has child elements textinput_style,navigation,behaviour_maskdata_input_changesFieldData,behaviour_maskdata_input_gainsfocus,behaviour_maskdata_input_losesfocus,behaviour_maskdata_input_isclicked,behaviour_maskdata_input_isshown,behaviour_maskdata_input_ispressesd-->
<!ELEMENT maskdata_input (textinput_style, navigation, behaviour*)>
<!--attribute id is to identify the element uniqly,

     name is defined to set the name to maskdata_input,

     state is defined to set the visuble state of maskdata_input component,

     mask is to set the formate,

     obligatoryanswer,obligatoryanswer_value -->
<!ATTLIST maskdata_input
	id ID #REQUIRED
	name CDATA "mask data"
	title CDATA ""
	mask CDATA "###?###?####"
	data IDREF #REQUIRED
	state (default | normal | disabled | hidden) "default"
	obligatoryanswer (true | false) "false"
	obligatoryanswer_value CDATA ""
	isRequired (true|false) "false"
>

<!-- numaric_stepper is defined to get the numaric value from predefined range, numaric_stepper has child elements textinput_style,navigation,behaviour_numaric_stepper_changesFieldData,behaviour_numaric_stepper_gainsfocus,behaviour_numaric_stepper_losesfocus,behaviour_numaric_stepper_isclicked,behaviour_numaric_stepper_isshown,behaviour_numaric_stepper_ispressesd-->
<!ELEMENT numaric_stepper (textinput_style, navigation, behaviour*)>
<!--attribute id is to identify the element uniqly,

     name is defined to set the name to printbutton,

     state is defined to set the visuble state of printbutton component,

     number is set the number to numaric_stepper,

     min is to set the minimum value in list,

     max is to set the maximum value in list-->
<!ATTLIST numaric_stepper
	id ID #REQUIRED
	name CDATA "numaric stepper"
	title CDATA ""
	number CDATA "1"
	referenceData CDATA ""
	step CDATA "1"
	min CDATA "1"
	max CDATA "10"
	state (default | normal | disabled | hidden) "default"
	isRequired (true|false) "false"
>

<!-- password_input is defined to read password from the user, password_input has child elements textinput_style,navigation,behaviour_password_input_changesFieldData,behaviour_password_input_gainsfocus,behaviour_password_input_losesfocus,behaviour_password_input_isclicked,behaviour_maskdata_input_isshown,behaviour_password_input_ispressesd-->
<!ELEMENT password_input (textinput_style, navigation, behaviour*)>
<!--attribute id is to identify the element uniqly,
     name is defined to set the name to password_input,
     state is defined to set the visuble state of password_input component,
     password is set the value to password_input,
     maxchar is set maxmim character can read,
     minchat is set to minimum character can read, 
     obligatoryanswer,obligatoryanswer_value -->
<!ATTLIST password_input
	id ID #REQUIRED
	name CDATA "password"
	title CDATA ""
	password CDATA ""
	data IDREF #REQUIRED
	referenceData CDATA ""
	maxchar CDATA "16"
	minchar CDATA "4"
	align (left | center | right) "left"
	state (default | normal | disabled | hidden) "default"
	obligatoryanswer (true | false) "false"
	obligatoryanswer_value CDATA ""
	isRequired (true|false) "false"
>

<!-- attachment is defined to set attachment to page, attachment has child elements textinput_style,navigation,behaviour_maskdata_attachment_changesFieldData,behaviour_password_attachment_isclicked-->
<!ELEMENT attachment (textinput_style, navigation, behaviour*)>
<!--attribute id is to identify the element uniqly,

     name is defined to set the name to printbutton,

     state is defined to set the visuble state of printbutton component,

     maxsize is defined to set maximum size it can upload,

     attachlable,detachlabel  is defined to set lables to display ,

     obligatoryanswer,obligatoryanswer_value -->
<!ATTLIST attachment
	id ID #REQUIRED
	name CDATA "file attachment"
	maxsize CDATA "2"
	attachlable CDATA "attach"
	detachlabel CDATA "detach"
	leftbuttonposition (true | false) "true"
	state (default | normal | disabled | hidden) "default"
	obligatoryanswer (true | false) "false"
	obligatoryanswer_value CDATA ""
	isRequired (true|false) "false"
>

<!--image_report is defined to set the image to show, image_report has child elements textinput_style,navigation,behaviour_image_report_changesFieldData,behaviour_image_report_isclicked,behaviour_image_report_isshown-->
<!ELEMENT image_report (textinput_style, navigation, behaviour*)>
<!--attribute id is to identify the element uniqly,

     name is defined to set the name to image_report,

     state is defined to set the visuble state of image_report component,

     imageSize is to set the image size,

     acquireLabel,removeLabel are labels to display,

     buttonpositiontop is defined to set posion of the button,

      obligatoryanswer,obligatoryanswer_value -->
<!ATTLIST image_report
	id ID #REQUIRED
	name CDATA "image import"
	imageSize CDATA "2"
	acquireLabel CDATA "acquire"
	removeLabel CDATA "remove"
	buttonpositiontop (true | false) "false"
	state (default | normal | disabled | hidden) "default"
	obligatoryanswer (true | false) "false"
	obligatoryanswer_value CDATA ""
	isRequired (true|false) "false"
>
<!-- Vertical_slider is defined to set value by sliding, Vertical_slider has child elements slider_style,navigation,behaviour_Vertical_slider_gainsfocus,behaviour_Vertical_slider_losesfocus,behaviour_Vertical_slider_isclicked,behaviour_Vertical_slider_isshown,behaviour_Vertical_slider_ispressesd-->
<!ELEMENT Vertical_slider (slider_style, navigation, behaviour*)>
<!--attribute id is to identify the element uniqly,

     name is defined to set the name to Vertical_slider,

     state is defined to set the visuble state of Vertical_slider component,

      minslider is to set the minimum value for the Vertical_slider,

      maxslidet is to set the maximumt value for the Vertical_slider,

     snap is to

     color is to set the color for slider,

     mincaption,maxcaption is set the label at starting and ending point for slider-->
<!ATTLIST Vertical_slider
	id ID #REQUIRED
	name CDATA "vertical slider"
	minslider CDATA "0"
	maxslidet CDATA "10"
	snap CDATA "1"
	color CDATA "CCCCCC"
	mincaption CDATA "min"
	maxcaption CDATA "max"
	state (default | normal | disabled | hidden) "default"
	isRequired (true|false) "false"
>
<!ELEMENT slider_style (styletext)>
<!ATTLIST slider_style
	step CDATA "2"
	color CDATA "000000">

<!-- horizantal_slider is defined to set value by sliding, horizantal_slider has child elements slider_style,navigation,behaviour_horizantal_slider_gainsfocus,behaviour_horizantal_slider_losesfocus,behaviour_horizantal_slider_isclicked,behaviour_horizantal_slider_isshown,behaviour_horizantal_slider_ispressesd-->
<!ELEMENT horizantal_slider (slider_style, navigation, behaviour*)>
<!--attribute id is to identify the element uniqly,

     name is defined to set the name to horizantal_slider,

     state is defined to set the visuble state of horizantal_slider component,

      minslider is to set the minimum value for the horizantal_slider,

      maxslidet is to set the maximumt value for the horizantal_slider,

     snap is to

     color is to set the color for slider,

     mincaption,maxcaption is set the label at starting and ending point for slider-->
<!ATTLIST horizantal_slider
	id ID #REQUIRED
	name CDATA "vertical slider"
	minslider CDATA "0"
	maxslider CDATA "10"
	snap CDATA "1"
	color CDATA "CCCCCC"
	mincaption CDATA "min"
	maxcaption CDATA "max"
	state (default | normal | disabled | hidden) "default"
	isRequired (true|false) "false"
>
<!-- table is defined to display the value in formate of table, table has child elements table_style,navigation,behaviour_table_changesFielddata,behaviour_row_isadded,behaviour_row_isdeleted,behaviour_row_isaddedordeleted,behaviour_row_gainsfocus,behaviour_row_losesfocus,behaviour_table_gainsfocus,behaviour_table_losesfocus-->
<!ELEMENT table (table_style, columns, navigation, behaviour*)>
<!--attribute id is to identify the element uniqly,

     name is defined to set the name to table,

     state is defined to set the visuble state of table component.

     rowsheight is set default height for no of rows is to display,

     maxrows is to set maximum row can table can have,

     showheader is set the header has to dispaly or not,

      headerheight is to set the header height,

     resizablecolumns is to set columns can resize or not,

     obligatoryanswer,obligatoryanswer_value -->
<!-- need to develop columns -->
<!ATTLIST table
	id ID #REQUIRED
	name CDATA "table"
	data IDREF #REQUIRED
	objectType IDREF #REQUIRED
	rowsHeIght CDATA ""
	Maxrows CDATA ""
	showheader (true | false) "true"
	headerheight CDATA "25"
	showbuttons (true | false) "true"
	resizablecolumns (true | false) "true"
	state (default | normal | disabled | hidden) "default"
	obligatoryanswer (true | false) "false"
	obligatoryanswer_value CDATA ""
>
<!ELEMENT columns (column*)>
<!ELEMENT column (text_style, behaviour*)>
<!ATTLIST column
	id ID #REQUIRED
	header CDATA ""
	state (default | normal | disabled | hidden) "default"
	width CDATA ""
	text CDATA ""
	maxChar CDATA ""
	align (center | left | right) "left"
	formate (none | numaric | alfa | alfa_numaric | custom) "none"
	customString CDATA ""
>

<!ELEMENT table_style (styletext, theme )>
<!ATTLIST table_style
				headercolor1 CDATA "FFFFFF"
				hadercolor2 CDATA "FFFFFF"
				rowsbackgroundcolor1 CDATA "EEEEEE"
				rowsbackgroundcolor2 CDATA "CCCCCC"
				border_type (solid|none) "solid"
				boarder_color CDATA "000000"
				boader_size CDATA "1"
				boarder_radius CDATA "0"
				backgroud_color CDATA "FFFFFF"	>
<!-- ranking is defined to show the list of items by ranking wise, ranking has child elements button_style,navigation,behaviour_ranking_changesfielddata,behaviour_ranking_gainsfocus,behaviour_ranking_losesfocus,behaviour_ranking_isclicked-->
<!ELEMENT ranking (item*,button_style, navigation, behaviour*)>
<!--attribute id is to identify the element uniqly,

     name is defined to set the name to ranking,

     state is defined to set the visuble state of ranking component.

     items is set the items ot diaplay-->
<!ATTLIST ranking
	id ID #REQUIRED
	name CDATA "ranking"
	list IDREF #REQUIRED
	state (default | normal | disabled | hidden) "default"
>
<!-- show_form_button is defined to show the form on click, show_form_button has child elements button_style,navigation,behaviour_show_form_button_changesfielddata,behaviour_show_form_button_isshown-->
<!ELEMENT show_form_button (button_style, navigation, behaviour*)>
<!--attribute id is to identify the element uniqly,

     name is defined to set the name to show_form_button,

     state is defined to set the visuble state of show_form_button component,

     caption is to set the cpation for show_form_button,

     form is set to form that has diapla after submit,

     forminstance is to set the type instance,

     newWindow is to set form should diplay in new window or not,

     showerrormessage is to set the should show error message or not-->
<!ATTLIST show_form_button
	name CDATA "show form button"
	caption CDATA ""
	form CDATA ""
	forminstance (newinstance | existinginstance | newchildinstance | singlechildinstance | existingchildinstance) "newinstance"
	customparamer CDATA ""
	newWindow (true | false) "true"
	showerrormessage (true | false) "true"
	state (default | normal | disabled | hidden) "default"
>
<!-- show_Report_button is defined to show the report on click, show_Report_button has child elements button_style,navigation,behaviour_show_Report_button_changesfielddata,behaviour_show_Report_button_isshown-->
<!ELEMENT show_Report_button (button_style, navigation, behaviour*)>
<!--attribute id is to identify the element uniqly,

     name is defined to set the name to show_Report_button,

     state is defined to set the visuble state of show_Report_button component,

     caption is to set the cpation for show_Report_button,

     report is set to report that has diaplay after submit,

     forminstance is to set the type instance,

     newWindow is to set report should diplay in new window or not,

     showerrormessage is to set the should show error message or not-->
<!ATTLIST show_Report_button
	id ID #REQUIRED
	name CDATA "show Report button"
	caption CDATA ""
	report CDATA ""
	customparamer CDATA ""
	newWindow (true | false) "true"
	showerrormessage (true | false) "true"
	state (default | normal | disabled | hidden) "default"
>


<!ELEMENT tabset (tabs*,tabset_style, navigation, behaviour*)>
<!ATTLIST tabset
	id ID #REQUIRED
	name CDATA #REQUIRED
	state CDATA #REQUIRED
>
<!ELEMENT tabs (group)>
<!ATTLIST tabs
	title CDATA #REQUIRED
	id ID #REQUIRED
>
<!ELEMENT tabset_style (styletab, theme)>
<!-- element styletext is defined to set the font to text -->
<!ELEMENT styletab EMPTY>
<!-- attribute fonttype is to set the fonttype of display text,

      fontsize is to set the size of display text,

      fontcolor is to set the display color of text,

      bold is to make font as bold,italic to to make the font as italic-->
<!ATTLIST styletab
	fonttype CDATA "Verdana"
	fontsize CDATA "10"
	fontcolor CDATA "000000"
	bold (false | true) "false"
	italic (false | true) "false"
	setAnimation (true|false) "false"
>
<!-- formula -->

<!ELEMENT newformula (#PCDATA) >

<!ELEMENT formula ((formula_value | builtin_function | userdefined_function), operator)+>
<!ELEMENT formula_value (value_or_number | date | state | value_ofa_field | formulaspecial_condition)>
<!ELEMENT value_or_number (#PCDATA)> 
<!ELEMENT state EMPTY>
<!ATTLIST state 
		value (true|false) "true">
<!ELEMENT date (#PCDATA)>
<!ELEMENT value_ofa_field EMPTY>
<!ATTLIST value_ofa_field
	controlId CDATA #REQUIRED
	pageid CDATA #REQUIRED
	formid CDATA #REQUIRED>
<!ELEMENT formulaspecial_condition EMPTY>
<!ATTLIST formulaspecial_condition
	value (form-stage | form-role | form-instance_name | form-instame_number | form-instance_id | form-utl | form-parent_instance_name | form-parent_instance_number | form-parent_instance_id | form-child_instance_names | form-child_instance_ids | form-is_read_only_state | behaviour-last_command_was_sucessful | behaviour-last_command_error | behaviour-last_behaviours_return_value | util-current_date | util-current_time | util-new_line | user-first_name | uset-last_name | user-full_name | user-email | user-title | user-address_line1 | user-address_line2 | user-town | user-zip_code | user-stateorprovince | user-country | user-phone | user-tax | user-cellphone | user-skype | user-alternate_email | user-domain_username | gateway_http_user) "form-stage"
>
<!ELEMENT operator EMPTY>
<!ATTLIST operator
	value (plus|minus|multiply|divide|equal|notequal|logical_and|logical_or|isless|isgreater|isless_equal|isgreater_equal) "plus">
<!ELEMENT builtin_function (absolute | average | ceiling | count | date_add | date_difference | day | extract_querystring_parameter | floor | get_custom_parameter | get_external_call_parameter | get_utl_parameter | hours | indexof | join | last_indexof | left_trim | length | lower_case | maximum | minimum | minutes | modulo | month | month_name | power | random | replace | rigth_trim | round | search | seconds | squareroot | sub_text1 | sub_text2 | sum | trim | uppercase | url-decode | url-encode | utc | weekday_name | weekday_number | year)>
<!ELEMENT url-decode EMPTY>
<!ELEMENT url-encode EMPTY>
<!ELEMENT absolute (number)>
<!ELEMENT number (value_or_number | date | state | value_ofa_field | formulaspecial_condition)>
<!ELEMENT average (list_0f_values)>
<!ELEMENT formula_list (value_or_number | date | state | value_ofa_field | formulaspecial_condition)>
<!ELEMENT ceiling (number)>
<!ELEMENT count (list_0f_values)>
<!ELEMENT date_add (date_value, amount, unit)>
<!ELEMENT date_value (value_or_number | date | state | value_ofa_field | formulaspecial_condition)>
<!ELEMENT amount (value_or_number | date | state | value_ofa_field | formulaspecial_condition)>
<!ELEMENT unit (value_or_number | date | state | value_ofa_field | formulaspecial_condition)>
<!ELEMENT date_difference (date1_value, date2_value, unit)>
<!ELEMENT date1_value (value_or_number | date | state | value_ofa_field | formulaspecial_condition)>
<!ELEMENT date2_value (value_or_number | date | state | value_ofa_field | formulaspecial_condition)>
<!ELEMENT day (date_value)>
<!ELEMENT extract_querystring_parameter (querystring, parameter_name)>
<!ELEMENT querystring (value_or_number | date | state | value_ofa_field | formulaspecial_condition)>
<!ELEMENT parameter_name (value_or_number | date | state | value_ofa_field | formulaspecial_condition)>
<!ELEMENT floor (number)>
<!ELEMENT get_custom_parameter (parameter_name)>
<!ELEMENT get_external_call_parameter (paremeter_index)>
<!ELEMENT paremeter_index (value_or_number | date | state | value_ofa_field | formulaspecial_condition)>
<!ELEMENT get_utl_parameter (parameter_name)>
<!ELEMENT hours (date_value)>
<!ELEMENT indexof (text_value, search_text)>
<!ELEMENT text_value (value_or_number | date | state | value_ofa_field | formulaspecial_condition)>
<!ELEMENT search_text (value_or_number | date | state | value_ofa_field | formulaspecial_condition)>
<!ELEMENT join (list_0f_values)>
<!ELEMENT last_indexof (text_value, search_text)>
<!ELEMENT left_trim (text_value)>
<!ELEMENT length (text_value)>
<!ELEMENT lower_case (text_value)>
<!ELEMENT maximum (list_0f_values)>
<!ELEMENT minimum (list_0f_values)>
<!ELEMENT minutes (date_value)>
<!ELEMENT modulo (number, number)>
<!ELEMENT month (date_value)>
<!ELEMENT month_name (date_value)>
<!ELEMENT power (number, number)>
<!ELEMENT random (minmum_value, maximum_value)>
<!ELEMENT minmum_value (value_or_number | date | state | value_ofa_field | formulaspecial_condition)>
<!ELEMENT maximum_value (value_or_number | date | state | value_ofa_field | formulaspecial_condition)>
<!ELEMENT replace (text_value, pattern, repalce_text, flags)>
<!ELEMENT pattern (value_or_number | date | state | value_ofa_field | formulaspecial_condition)>
<!ELEMENT repalce_text (value_or_number | date | state | value_ofa_field | formulaspecial_condition)>
<!ELEMENT flags (value_or_number | date | state | value_ofa_field | formulaspecial_condition)>
<!ELEMENT rigth_trim (text_value)>
<!ELEMENT round (number, digits)>
<!ELEMENT digits (value_or_number | date | state | value_ofa_field | formulaspecial_condition)>
<!ELEMENT search (text_value, pattern, flags)>
<!ELEMENT seconds (date_value)>
<!ELEMENT squareroot (number)>
<!ELEMENT sub_text1 (text_value, start_index, end_index)>
<!ELEMENT start_index (value_or_number | date | state | value_ofa_field | formulaspecial_condition)>
<!ELEMENT end_index (value_or_number | date | state | value_ofa_field | formulaspecial_condition)>
<!ELEMENT sub_text2 (text_value, start_index, length_value)>
<!ELEMENT length_value (value_or_number | date | state | value_ofa_field | formulaspecial_condition)>
<!ELEMENT sum (list_0f_values)>
<!ELEMENT trim (text_value)>
<!ELEMENT uppercase (text_value)>
<!ELEMENT utc (date_value)>
<!ELEMENT weekday_name (date_value)>
<!ELEMENT weekday_number (date_value)>
<!ELEMENT year (date_value)>
<!ELEMENT userdefined_function ((formula_value | builtin_function | userdefined_function), operator)+>
<!ELEMENT list_0f_values EMPTY>

